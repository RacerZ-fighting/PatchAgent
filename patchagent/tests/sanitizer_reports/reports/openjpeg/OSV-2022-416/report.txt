INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/openjpeg:/out -v /mnt/data0/zf1025/AICC/oss-patch-build/openjpeg/OSV-2022-416/poc.bin:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce opj_decompress_fuzzer_J2K -runs=100.
+ FUZZER=opj_decompress_fuzzer_J2K
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer opj_decompress_fuzzer_J2K -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/opj_decompress_fuzzer_J2K -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2818520671
INFO: Loaded 1 modules   (11200 inline 8-bit counters): 11200 [0x55aefecbb6c0, 0x55aefecbe280), 
INFO: Loaded 1 PC tables (11200 PCs): 11200 [0x55aefecbe280,0x55aefece9e80), 
/out/opj_decompress_fuzzer_J2K: Running 1 inputs 100 time(s) each.
Running: /testcase
=================================================================
[1m[31m==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x51e0000016d0 at pc 0x55aefeac4285 bp 0x7ffe431c1960 sp 0x7ffe431c1130
[1m[0m[1m[34mWRITE of size 3828 at 0x51e0000016d0 thread T0[1m[0m
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x55aefeac4284 in __asan_memset /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:67:3
    #1 0x55aefebe0bf9 in opj_t1_allocate_buffers /src/openjpeg/src/lib/openjp2/t1.c:1504:9
    #2 0x55aefebc1d28 in opj_t1_decode_cblk /src/openjpeg/src/lib/openjp2/t1.c:1983:10
    #3 0x55aefebc1d28 in opj_t1_clbl_decode_processor /src/openjpeg/src/lib/openjp2/t1.c:1704:26
    #4 0x55aefeb91a27 in opj_thread_pool_submit_job /src/openjpeg/src/lib/openjp2/thread.c:835:9
    #5 0x55aefebc0d02 in opj_t1_decode_cblks /src/openjpeg/src/lib/openjp2/t1.c:1943:21
    #6 0x55aefeb81d2d in opj_tcd_t1_decode /src/openjpeg/src/lib/openjp2/tcd.c:2000:9
    #7 0x55aefeb81d2d in opj_tcd_decode_tile /src/openjpeg/src/lib/openjp2/tcd.c:1654:11
    #8 0x55aefeb22360 in opj_j2k_decode_tile /src/openjpeg/src/lib/openjp2/j2k.c:9862:11
    #9 0x55aefeb41129 in opj_j2k_decode_tiles /src/openjpeg/src/lib/openjp2/j2k.c:11707:15
    #10 0x55aefeb28ed2 in opj_j2k_exec /src/openjpeg/src/lib/openjp2/j2k.c:9006:33
    #11 0x55aefeb28ed2 in opj_j2k_decode /src/openjpeg/src/lib/openjp2/j2k.c:12010:11
    #12 0x55aefeb05bd3 in LLVMFuzzerTestOneInput /src/openjpeg/./tests/fuzzers/opj_decompress_fuzzer_J2K.cpp:196:13
    #13 0x55aefe9ba350 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #14 0x55aefe9a55c5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #15 0x55aefe9ab05f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #16 0x55aefe9d6302 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #17 0x7fb054a9b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #18 0x55aefe99d7ad in _start (/out/opj_decompress_fuzzer_J2K+0x897ad)

DEDUP_TOKEN: __asan_memset--opj_t1_allocate_buffers--opj_t1_decode_cblk
[1m[32m0x51e0000016d0 is located 0 bytes after 2640-byte region [0x51e000000c80,0x51e0000016d0)
[1m[0m[1m[35mallocated by thread T0 here:[1m[0m
    #0 0x55aefeac6bc7 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:142:3
    #1 0x55aefeb0f99d in opj_aligned_alloc_n /src/openjpeg/src/lib/openjp2/opj_malloc.c:61:9
    #2 0x55aefeb0f99d in opj_aligned_malloc /src/openjpeg/src/lib/openjp2/opj_malloc.c:209:12
    #3 0x55aefec2c1da in opj_t1_allocate_buffers /src/openjpeg/src/lib/openjp2/ht_dec.c:1066:39
    #4 0x55aefec2c1da in opj_t1_ht_decode_cblk /src/openjpeg/src/lib/openjp2/ht_dec.c:1151:10
    #5 0x55aefebc1eac in opj_t1_clbl_decode_processor /src/openjpeg/src/lib/openjp2/t1.c:1690:26
    #6 0x55aefeb91a27 in opj_thread_pool_submit_job /src/openjpeg/src/lib/openjp2/thread.c:835:9
    #7 0x55aefebc0d02 in opj_t1_decode_cblks /src/openjpeg/src/lib/openjp2/t1.c:1943:21
    #8 0x55aefeb81d2d in opj_tcd_t1_decode /src/openjpeg/src/lib/openjp2/tcd.c:2000:9
    #9 0x55aefeb81d2d in opj_tcd_decode_tile /src/openjpeg/src/lib/openjp2/tcd.c:1654:11
    #10 0x55aefeb22360 in opj_j2k_decode_tile /src/openjpeg/src/lib/openjp2/j2k.c:9862:11
    #11 0x55aefeb41129 in opj_j2k_decode_tiles /src/openjpeg/src/lib/openjp2/j2k.c:11707:15
    #12 0x55aefeb28ed2 in opj_j2k_exec /src/openjpeg/src/lib/openjp2/j2k.c:9006:33
    #13 0x55aefeb28ed2 in opj_j2k_decode /src/openjpeg/src/lib/openjp2/j2k.c:12010:11
    #14 0x55aefeb05bd3 in LLVMFuzzerTestOneInput /src/openjpeg/./tests/fuzzers/opj_decompress_fuzzer_J2K.cpp:196:13
    #15 0x55aefe9ba350 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #16 0x55aefe9a55c5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #17 0x55aefe9ab05f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #18 0x55aefe9d6302 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #19 0x7fb054a9b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)

DEDUP_TOKEN: ___interceptor_posix_memalign--opj_aligned_alloc_n--opj_aligned_malloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/openjpeg/src/lib/openjp2/t1.c:1504:9 in opj_t1_allocate_buffers
Shadow bytes around the buggy address:
  0x51e000001400: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x51e000001480: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x51e000001500: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x51e000001580: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x51e000001600: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
=>0x51e000001680: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m[[1m[31mfa[1m[0m][1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x51e000001700: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x51e000001780: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x51e000001800: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x51e000001880: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x51e000001900: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           [1m[0m00[1m[0m
  Partially addressable: [1m[0m01[1m[0m [1m[0m02[1m[0m [1m[0m03[1m[0m [1m[0m04[1m[0m [1m[0m05[1m[0m [1m[0m06[1m[0m [1m[0m07[1m[0m 
  Heap left redzone:       [1m[31mfa[1m[0m
  Freed heap region:       [1m[35mfd[1m[0m
  Stack left redzone:      [1m[31mf1[1m[0m
  Stack mid redzone:       [1m[31mf2[1m[0m
  Stack right redzone:     [1m[31mf3[1m[0m
  Stack after return:      [1m[35mf5[1m[0m
  Stack use after scope:   [1m[35mf8[1m[0m
  Global redzone:          [1m[31mf9[1m[0m
  Global init order:       [1m[36mf6[1m[0m
  Poisoned by user:        [1m[34mf7[1m[0m
  Container overflow:      [1m[34mfc[1m[0m
  Array cookie:            [1m[31mac[1m[0m
  Intra object redzone:    [1m[33mbb[1m[0m
  ASan internal:           [1m[33mfe[1m[0m
  Left alloca redzone:     [1m[34mca[1m[0m
  Right alloca redzone:    [1m[34mcb[1m[0m
==14==ABORTING
