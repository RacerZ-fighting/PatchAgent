The sanitizer detected a stack overflow vulnerability.The explanation of the vulnerability is: Excessive function calls lead to stack exhaustion, causing the program to crash or behave unpredictably.Here is the detail: 

- org.codehaus.janino.Parser.parseConditionalExpression (org/codehaus/janino/Parser.java:2791)
- java.base/sun.nio.cs.CESU_8$Encoder.encodeLoop (java/base/sun/nio/cs/CESU_8$Encoder/encodeLoop:542)
- java.base/java.nio.charset.CharsetEncoder.encode (java/base/java/nio/charset/CharsetEncoder.java:585)
- java.base/java.lang.String.encodeWithEncoder (java/base/java/lang/String.java:876)
- java.base/java.lang.String.encode (java/base/java/lang/String.java:833)
- java.base/java.lang.String.getBytes (java/base/java/lang/String.java:1783)


To fix this issue, follow the advice below:

1. Avoid deep recursion by implementing iterative solutions where possible.
2. Increase the stack size if necessary to accommodate recursion.
3. Reduce function call depth by refactoring complex recursive functions.