The sanitizer detected a heap buffer overflow vulnerability. The explanation of the vulnerability is: The program tried to access a heap object outside of its allocated memory, causing potential memory corruption or crashes. Here is the detail: 

READ of size 16 at 0x50200000187f thread T0
    - __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    - avifImagePushProperty /src/libavif/src/avif.c:404:5
    - avifImageAddUUIDProperty /src/libavif/src/avif.c:426:12
    - avif::testutil::(anonymous namespace)::PropsValid(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>) /src/libavif/tests/gtest/avif_fuzztest_properties.cc:39:7
    - auto fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)::operator()<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&>(auto&&...) const /src/libavif/ext/fuzztest/fuzztest/internal/fixture_driver.h:294:11
    - decltype(std::declval<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)>()(std::declval<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&>(), std::declval<std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&>(), std::declval<std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&>(), std::declval<std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&>())) std::__1::__invoke[abi:ne180100]<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...), std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&>(fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)&&, std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&) /usr/local/include/c++/v1/__type_traits/invoke.h:344:25
    - decltype(auto) std::__1::__apply_tuple_impl[abi:ne180100]<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...), std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&, 0ul, 1ul, 2ul, 3ul>(fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)&&, std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&, std::__1::__tuple_indices<0ul, 1ul, 2ul, 3ul>) /usr/local/include/c++/v1/tuple:1424:5
    - decltype(auto) std::__1::apply[abi:ne180100]<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...), std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&>(fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)&&, std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&) /usr/local/include/c++/v1/tuple:1428:5
    - fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const /src/libavif/ext/fuzztest/fuzztest/internal/fixture_driver.h:292:5
    - fuzztest::internal::FuzzTestFuzzerImpl::RunOneInput(fuzztest::internal::FuzzTestFuzzerImpl::Input const&) /src/libavif/ext/fuzztest/fuzztest/internal/runtime.cc:927:20
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunOneInputData(std::__1::basic_string_view<char, std::__1::char_traits<char>>) /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:131:8
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunInFuzzingMode(int*, char***, fuzztest::internal::Configuration const&)::$_1::operator()(unsigned char const*, unsigned long) const /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:93:34
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunInFuzzingMode(int*, char***, fuzztest::internal::Configuration const&)::$_1::__invoke(unsigned char const*, unsigned long) /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:92:35
    - fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    - fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    - fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunInFuzzingMode(int*, char***, fuzztest::internal::Configuration const&) /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:92:3
    - fuzztest::internal::GTest_TestAdaptor::TestBody() /src/libavif/ext/fuzztest/fuzztest/internal/googletest_adaptor.h:83:7
    - void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2612:10
    - void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2648:14
    - testing::Test::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2687:5
    - testing::TestInfo::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2836:11
    - testing::TestSuite::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:3015:30
    - testing::internal::UnitTestImpl::RunAllTests() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:5920:44
    - bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2612:10
    - bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2648:14
    - testing::UnitTest::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:5484:10
    - RUN_ALL_TESTS() /src/libavif/build/_deps/googletest-src/googletest/include/gtest/gtest.h:2317:73
    - main /src/libavif/ext/fuzztest/fuzztest/fuzztest_gtest_main.cc:28:10

0x50200000187f is located 0 bytes after 15-byte region [0x502000001870,0x50200000187f)
allocated by thread T0 here:
    - operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:86:3
    - void* std::__1::__libcpp_operator_new[abi:ne180100]<unsigned long>(unsigned long) /usr/local/include/c++/v1/new:271:10
    - std::__1::__libcpp_allocate[abi:ne180100](unsigned long, unsigned long) /usr/local/include/c++/v1/new:295:10
    - std::__1::allocator<unsigned char>::allocate[abi:ne180100](unsigned long) /usr/local/include/c++/v1/__memory/allocator.h:125:32
    - std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned char>>::pointer> std::__1::__allocate_at_least[abi:ne180100]<std::__1::allocator<unsigned char>>(std::__1::allocator<unsigned char>&, unsigned long) /usr/local/include/c++/v1/__memory/allocate_at_least.h:55:19
    - std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__vallocate[abi:ne180100](unsigned long) /usr/local/include/c++/v1/vector:741:25
    - void std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__init_with_size[abi:ne180100]<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned long) /usr/local/include/c++/v1/vector:759:7
    - std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::vector(std::__1::vector<unsigned char, std::__1::allocator<unsigned char>> const&) /usr/local/include/c++/v1/vector:1195:3
    - avif::testutil::(anonymous namespace)::TestProp::TestProp(avif::testutil::(anonymous namespace)::TestProp const&) /src/libavif/tests/gtest/avif_fuzztest_properties.cc:21:8
    - avif::testutil::(anonymous namespace)::PropsValid(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>) /src/libavif/tests/gtest/avif_fuzztest_properties.cc:37:26
    - auto fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)::operator()<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&>(auto&&...) const /src/libavif/ext/fuzztest/fuzztest/internal/fixture_driver.h:294:11
    - decltype(std::declval<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)>()(std::declval<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&>(), std::declval<std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&>(), std::declval<std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&>(), std::declval<std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&>())) std::__1::__invoke[abi:ne180100]<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...), std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&>(fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)&&, std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>&, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>&, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>&) /usr/local/include/c++/v1/__type_traits/invoke.h:344:25
    - decltype(auto) std::__1::__apply_tuple_impl[abi:ne180100]<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...), std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&, 0ul, 1ul, 2ul, 3ul>(fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)&&, std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&, std::__1::__tuple_indices<0ul, 1ul, 2ul, 3ul>) /usr/local/include/c++/v1/tuple:1424:5
    - decltype(auto) std::__1::apply[abi:ne180100]<fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...), std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&>(fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const::'lambda'(auto&&...)&&, std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>&) /usr/local/include/c++/v1/tuple:1428:5
    - fuzztest::internal::FixtureDriver<fuzztest::Domain<std::__1::tuple<std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>>>, fuzztest::internal::NoFixture, void (*)(std::__1::unique_ptr<avifImage, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifEncoder, avif::UniquePtrDeleter>, std::__1::unique_ptr<avifDecoder, avif::UniquePtrDeleter>, std::__1::vector<avif::testutil::(anonymous namespace)::TestProp, std::__1::allocator<avif::testutil::(anonymous namespace)::TestProp>>), void*>::Test(fuzztest::internal::MoveOnlyAny&&) const /src/libavif/ext/fuzztest/fuzztest/internal/fixture_driver.h:292:5
    - fuzztest::internal::FuzzTestFuzzerImpl::RunOneInput(fuzztest::internal::FuzzTestFuzzerImpl::Input const&) /src/libavif/ext/fuzztest/fuzztest/internal/runtime.cc:927:20
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunOneInputData(std::__1::basic_string_view<char, std::__1::char_traits<char>>) /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:131:8
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunInFuzzingMode(int*, char***, fuzztest::internal::Configuration const&)::$_1::operator()(unsigned char const*, unsigned long) const /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:93:34
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunInFuzzingMode(int*, char***, fuzztest::internal::Configuration const&)::$_1::__invoke(unsigned char const*, unsigned long) /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:92:35
    - fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    - fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    - fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    - fuzztest::internal::FuzzTestExternalEngineAdaptor::RunInFuzzingMode(int*, char***, fuzztest::internal::Configuration const&) /src/libavif/ext/fuzztest/fuzztest/internal/compatibility_mode.cc:92:3
    - fuzztest::internal::GTest_TestAdaptor::TestBody() /src/libavif/ext/fuzztest/fuzztest/internal/googletest_adaptor.h:83:7
    - void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2612:10
    - void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2648:14
    - testing::Test::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2687:5
    - testing::TestInfo::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2836:11
    - testing::TestSuite::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:3015:30
    - testing::internal::UnitTestImpl::RunAllTests() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:5920:44
    - bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2612:10
    - bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:2648:14
    - testing::UnitTest::Run() /src/libavif/build/_deps/googletest-src/googletest/src/gtest.cc:5484:10
    - RUN_ALL_TESTS() /src/libavif/build/_deps/googletest-src/googletest/include/gtest/gtest.h:2317:73
    - main /src/libavif/ext/fuzztest/fuzztest/fuzztest_gtest_main.cc:28:10


To fix this issue, follow the advice below:

1. If overflow is unavoidable, allocate a sufficiently large buffer during initialization.
2. Add explicit bounds checking before accessing arrays or buffers to prevent overflows.
3. Replace unsafe functions like memcpy, strcpy, strcat, and sprintf with safer alternatives such as strncpy, strncat, and snprintf.
4. Check for integer overflows in size calculations that could cause improper memory allocations.
