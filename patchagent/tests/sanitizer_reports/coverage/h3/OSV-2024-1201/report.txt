INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/h3:/out -v /mnt/data0/zf1025/AICC/build_space/PoC:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce fuzzerPolygonToCellsExperimental -runs=100.
+ FUZZER=fuzzerPolygonToCellsExperimental
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer fuzzerPolygonToCellsExperimental -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/fuzzerPolygonToCellsExperimental -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3245964594
/out/fuzzerPolygonToCellsExperimental: Running 1 inputs 100 time(s) each.
Running: /testcase
munmap_chunk(): invalid pointer
==14== ERROR: libFuzzer: deadly signal
    #0 0x55dd85a7dfc4 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x55dd859fd018 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x55dd859e03b3 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:231:3
    #3 0x7f2cd0c8c41f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 5cfb896dd40f90aa8c6c8bb856004d1f5cfe293c)
    #4 0x7f2cd0a8600a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #5 0x7f2cd0a65858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #6 0x7f2cd0ad0265  (/lib/x86_64-linux-gnu/libc.so.6+0x8d265) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #7 0x7f2cd0ad82fb  (/lib/x86_64-linux-gnu/libc.so.6+0x952fb) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #8 0x7f2cd0ad854b  (/lib/x86_64-linux-gnu/libc.so.6+0x9554b) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #9 0x55dd85a800fb in iterDestroyPolygonCompact /src/h3/src/h3lib/lib/polyfill.c:598:9
    #10 0x55dd85a800fb in iterStepPolygonCompact /src/h3/src/h3lib/lib/polyfill.c
    #11 0x55dd85a803d8 in iterStepPolygon /src/h3/src/h3lib/lib/polyfill.c:661:5
    #12 0x55dd85a80541 in polygonToCellsExperimental /src/h3/src/h3lib/lib/polyfill.c:713:23
    #13 0x55dd85a7f5c1 in run /src/h3/src/apps/fuzzers/fuzzerPolygonToCellsExperimental.c:61:9
    #14 0x55dd85a7f5c1 in LLVMFuzzerTestOneInput /src/h3/src/apps/fuzzers/fuzzerPolygonToCellsExperimental.c:97:9
    #15 0x55dd859e18c0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #16 0x55dd859ccb35 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #17 0x55dd859d25cf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #18 0x55dd859fd872 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #19 0x7f2cd0a67082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #20 0x55dd859c4d1d in _start (/out/fuzzerPolygonToCellsExperimental+0x26d1d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
