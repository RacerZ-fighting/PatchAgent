INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/hunspell:/out -v /mnt/data0/zf1025/AICC/build_space/PoC:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce affdicfuzzer -runs=100.
+ FUZZER=affdicfuzzer
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer affdicfuzzer -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/affdicfuzzer -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1439895598
INFO: Loaded 1 modules   (48 inline 8-bit counters): 48 [0x55a9ab799558, 0x55a9ab799588), 
INFO: Loaded 1 PC tables (48 PCs): 48 [0x55a9ab799588,0x55a9ab799888), 
/out/affdicfuzzer: Running 1 inputs 100 time(s) each.
Running: /testcase
UndefinedBehaviorSanitizer:DEADLYSIGNAL
[1m[31m==14==ERROR: UndefinedBehaviorSanitizer: SEGV on unknown address (pc 0x55a9ab583018 bp 0x7ffc605be500 sp 0x7ffc605be500 T14)
[1m[0m==14==The signal is caused by a READ memory access.
==14==Hint: this fault was caused by a dereference of a high value address (see register values below).  Disassemble the provided pc to learn which register was used.
    #0 0x55a9ab583018 in operator()<unsigned short, int> /usr/local/bin/../include/c++/v1/__algorithm/comp.h:41:12
    #1 0x55a9ab583018 in __invoke<std::__1::__less<void, void> &, unsigned short &, const int &> /usr/local/bin/../include/c++/v1/__type_traits/invoke.h:344:25
    #2 0x55a9ab583018 in unsigned short* std::__1::__lower_bound[abi:ne180100]<std::__1::_ClassicAlgPolicy, unsigned short*, unsigned short*, int, std::__1::__identity, std::__1::__less<void, void>>(unsigned short*, unsigned short*, int const&, std::__1::__less<void, void>&, std::__1::__identity&) /usr/local/bin/../include/c++/v1/__algorithm/lower_bound.h:39:9
    #3 0x55a9ab5de3e1 in lower_bound<unsigned short *, int, std::__1::__less<void, void> &> /usr/local/bin/../include/c++/v1/__algorithm/lower_bound.h:54:10
    #4 0x55a9ab5de3e1 in binary_search<unsigned short *, int, std::__1::__less<void, void> > /usr/local/bin/../include/c++/v1/__algorithm/binary_search.h:27:13
    #5 0x55a9ab5de3e1 in binary_search<unsigned short *, int> /usr/local/bin/../include/c++/v1/__algorithm/binary_search.h:34:10
    #6 0x55a9ab5de3e1 in HashMgr::free_flag(unsigned short*, short) /src/hunspell/src/hunspell/hashmgr.cxx:110:34
    #7 0x55a9ab5df0bf in HashMgr::add_word(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, unsigned short*, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const*, bool, int) /src/hunspell/src/hunspell/hashmgr.cxx
    #8 0x55a9ab5ddc88 in HashMgr::load_tables(char const*, char const*) /src/hunspell/src/hunspell/hashmgr.cxx:677:9
    #9 0x55a9ab5dc130 in HashMgr::HashMgr(char const*, char const*, char const*) /src/hunspell/src/hunspell/hashmgr.cxx:99:12
    #10 0x55a9ab56ac33 in HunspellImpl::HunspellImpl(char const*, char const*, char const*) /src/hunspell/src/hunspell/hunspell.cxx:183:25
    #11 0x55a9ab57c6be in Hunspell::Hunspell(char const*, char const*, char const*) /src/hunspell/src/hunspell/hunspell.cxx:2106:16
    #12 0x55a9ab56a2ad in LLVMFuzzerTestOneInput /src/hunspell/./src/tools/affdicfuzzer.cxx:63:14
    #13 0x55a9ab4cc600 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #14 0x55a9ab4b7875 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #15 0x55a9ab4bd30f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #16 0x55a9ab4e85b2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #17 0x7f69630e2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #18 0x55a9ab4afa5d in _start (/out/affdicfuzzer+0x2aa5d)

DEDUP_TOKEN: operator()<unsigned short, int>--__invoke<std::__1::__less<void, void> &, unsigned short &, const int &>--unsigned short* std::__1::__lower_bound[abi:ne180100]<std::__1::_ClassicAlgPolicy, unsigned short*, unsigned short*, int, std::__1::__identity, std::__1::__less<void, void>>(unsigned short*, unsigned short*, int const&, std::__1::__less<void, void>&, std::__1::__identity&)
UndefinedBehaviorSanitizer can not provide additional info.
SUMMARY: UndefinedBehaviorSanitizer: SEGV /src/hunspell/src/hunspell/hashmgr.cxx:110:34 in HashMgr::free_flag(unsigned short*, short)
==14==ABORTING
