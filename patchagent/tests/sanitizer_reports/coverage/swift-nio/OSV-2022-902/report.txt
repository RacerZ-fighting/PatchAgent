INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/swift-nio:/out -v /mnt/data0/zf1025/AICC/build_space/PoC:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce swift-nio-http1-fuzz-release -runs=100.
+ FUZZER=swift-nio-http1-fuzz-release
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer swift-nio-http1-fuzz-release -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/swift-nio-http1-fuzz-release -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase -dict=swift-nio-http1-fuzz-release.dict < /dev/null
Dictionary: 141 entries
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 603138817
INFO: Loaded 1 modules   (36565 inline 8-bit counters): 36565 [0x5555a56abeb0, 0x5555a56b4d85), 
INFO: Loaded 1 PC tables (36565 PCs): 36565 [0x5555a56b4d88,0x5555a5743ad8), 
/out/swift-nio-http1-fuzz-release: Running 1 inputs 100 time(s) each.
Running: /testcase
NIOHTTP1/HTTPDecoder.swift:915: Fatal error: Unexpected http_method llhttp_method(rawValue: 45)
==14== ERROR: libFuzzer: deadly signal
    #0 0x5555a4c6e584 in __sanitizer_print_stack_trace /home/build-user/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x5555a4c16878 in fuzzer::PrintStackTrace() /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x5555a4c022d3 in fuzzer::Fuzzer::CrashCallback() /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f030f7f241f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 5cfb896dd40f90aa8c6c8bb856004d1f5cfe293c)
    #4 0x5555a4ec46fe in Swift._assertionFailure(_: Swift.StaticString, _: Swift.String, file: Swift.StaticString, line: Swift.UInt, flags: Swift.UInt32) -> Swift.Never crtstuff.c
    #5 0x5555a4dc8ddf in function signature specialization <Arg[1] = Dead> of static NIOHTTP1.HTTPMethod.from(httpParserMethod: __C.llhttp_method) -> NIOHTTP1.HTTPMethod /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:915:13
    #6 0x5555a4dc3af2 in static NIOHTTP1.HTTPMethod.from(httpParserMethod: __C.llhttp_method) -> NIOHTTP1.HTTPMethod /src/swift-nio/swift-nio-fuzz/<compiler-generated>
    #7 0x5555a4dc3af2 in NIOHTTP1.HTTPDecoder.didFinishHead(versionMajor: Swift.Int, versionMinor: Swift.Int, isUpgrade: Swift.Bool, method: __C.llhttp_method, statusCode: Swift.Int, keepAliveState: NIOHTTP1.KeepAliveState) -> Swift.Bool /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:625:62
    #8 0x5555a4dc491d in protocol witness for NIOHTTP1.(HTTPDecoderDelegate in _F43193CAFF0FA6BBC607ACDC4F85EA9D).didFinishHead(versionMajor: Swift.Int, versionMinor: Swift.Int, isUpgrade: Swift.Bool, method: __C.llhttp_method, statusCode: Swift.Int, keepAliveState: NIOHTTP1.KeepAliveState) -> Swift.Bool in conformance NIOHTTP1.HTTPDecoder<A, B> : NIOHTTP1.(HTTPDecoderDelegate in _F43193CAFF0FA6BBC607ACDC4F85EA9D) in NIOHTTP1 /src/swift-nio/swift-nio-fuzz/<compiler-generated>
    #9 0x5555a4dc1cfa in NIOHTTP1.(BetterHTTPParser in _F43193CAFF0FA6BBC607ACDC4F85EA9D).didReceiveHeadersCompleteNotification(versionMajor: Swift.Int, versionMinor: Swift.Int, statusCode: Swift.Int, isUpgrade: Swift.Bool, method: __C.llhttp_method, keepAliveState: NIOHTTP1.KeepAliveState) -> NIOHTTP1.(BetterHTTPParser in _F43193CAFF0FA6BBC607ACDC4F85EA9D).MessageContinuation /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:324:37
    #10 0x5555a4dc02e1 in closure #9 (Swift.Optional<Swift.UnsafeMutablePointer<__C.llhttp__internal_s>>) -> Swift.Int32 in NIOHTTP1.(BetterHTTPParser in _F43193CAFF0FA6BBC607ACDC4F85EA9D).init(kind: NIOHTTP1.HTTPDecoderKind) -> NIOHTTP1.(BetterHTTPParser in _F43193CAFF0FA6BBC607ACDC4F85EA9D) /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:99:27
    #11 0x5555a4cbabc5 in llhttp__internal__run /src/swift-nio/Sources/CNIOLLHTTP/c_nio_llhttp.c:14251:13
    #12 0x5555a4cb6fda in c_nio_llhttp__internal_execute /src/swift-nio/Sources/CNIOLLHTTP/c_nio_llhttp.c:16120:10
    #13 0x5555a4dc22f8 in c_nio_llhttp_execute_swift /src/swift-nio/Sources/CNIOLLHTTP/include/CNIOLLHTTP.h:25:12
    #14 0x5555a4dc22f8 in closure #1 (Swift.UnsafeMutablePointer<__C.llhttp__internal_s>) -> __C.llhttp_errno in NIOHTTP1.(BetterHTTPParser in _F43193CAFF0FA6BBC607ACDC4F85EA9D).feedInput(Swift.Optional<Swift.UnsafeRawBufferPointer>) throws -> Swift.Int /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:387:22
    #15 0x5555a4dc202e in generic specialization <__C.llhttp_errno> of NIOHTTP1.(BetterHTTPParser in _F43193CAFF0FA6BBC607ACDC4F85EA9D).withExclusiveHTTPParser<A>((Swift.UnsafeMutablePointer<__C.llhttp__internal_s>) -> A) -> A /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:370:16
    #16 0x5555a4dc202e in NIOHTTP1.(BetterHTTPParser in _F43193CAFF0FA6BBC607ACDC4F85EA9D).feedInput(Swift.Optional<Swift.UnsafeRawBufferPointer>) throws -> Swift.Int /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:375:48
    #17 0x5555a4dcb322 in closure #1 (Swift.UnsafeRawBufferPointer) throws -> Swift.Int in NIOHTTP1.HTTPDecoder.(feedInput in _F43193CAFF0FA6BBC607ACDC4F85EA9D)(context: NIOCore.ChannelHandlerContext, buffer: inout NIOCore.ByteBuffer) throws -> () /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:709:29
    #18 0x5555a4dcb322 in partial apply forwarder for closure #1 (Swift.UnsafeRawBufferPointer) throws -> Swift.Int in NIOHTTP1.HTTPDecoder.(feedInput in _F43193CAFF0FA6BBC607ACDC4F85EA9D)(context: NIOCore.ChannelHandlerContext, buffer: inout NIOCore.ByteBuffer) throws -> () /src/swift-nio/swift-nio-fuzz/<compiler-generated>
    #19 0x5555a4dc31da in generic specialization <Swift.Int> of NIOCore.ByteBuffer.withUnsafeReadableBytes<A>((Swift.UnsafeRawBufferPointer) throws -> A) throws -> A /src/swift-nio/swift-nio-fuzz/<compiler-generated>
    #20 0x5555a4dc428b in NIOHTTP1.HTTPDecoder.(feedInput in _F43193CAFF0FA6BBC607ACDC4F85EA9D)(context: NIOCore.ChannelHandlerContext, buffer: inout NIOCore.ByteBuffer) throws -> () /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:708:35
    #21 0x5555a4dc43d2 in NIOHTTP1.HTTPDecoder.decode(context: NIOCore.ChannelHandlerContext, buffer: inout NIOCore.ByteBuffer) throws -> NIOCore.DecodingState /src/swift-nio/Sources/NIOHTTP1/HTTPDecoder.swift:716:22
    #22 0x5555a4dc4766 in protocol witness for NIOCore.ByteToMessageDecoder.decode(context: NIOCore.ChannelHandlerContext, buffer: inout NIOCore.ByteBuffer) throws -> NIOCore.DecodingState in conformance NIOHTTP1.HTTPDecoder<A, B> : NIOCore.ByteToMessageDecoder in NIOHTTP1 /src/swift-nio/swift-nio-fuzz/<compiler-generated>
    #23 0x5555a4d3f275 in closure #1 (inout A, inout NIOCore.ByteBuffer) throws -> NIOCore.DecodingState in NIOCore.ByteToMessageHandler.(decodeLoop in _3B15959193A57E0C1E789632BC533F5E)(context: NIOCore.ChannelHandlerContext, decodeMode: NIOCore.ByteToMessageHandler<A>.(DecodeMode in _3B15959193A57E0C1E789632BC533F5E)) throws -> NIOCore.(B2MDBuffer in _3B15959193A57E0C1E789632BC533F5E).BufferProcessingResult /src/swift-nio/Sources/NIOCore/Codec.swift:582:49
    #24 0x5555a4d3ef0e in NIOCore.ByteToMessageHandler.(withNextBuffer in _3B15959193A57E0C1E789632BC533F5E)(allowEmptyBuffer: Swift.Bool, _: (inout A, inout NIOCore.ByteBuffer) throws -> NIOCore.DecodingState) throws -> NIOCore.(B2MDBuffer in _3B15959193A57E0C1E789632BC533F5E).BufferProcessingResult /src/swift-nio/Sources/NIOCore/Codec.swift:539:36
    #25 0x5555a4d3ef0e in NIOCore.ByteToMessageHandler.(decodeLoop in _3B15959193A57E0C1E789632BC533F5E)(context: NIOCore.ChannelHandlerContext, decodeMode: NIOCore.ByteToMessageHandler<A>.(DecodeMode in _3B15959193A57E0C1E789632BC533F5E)) throws -> NIOCore.(B2MDBuffer in _3B15959193A57E0C1E789632BC533F5E).BufferProcessingResult /src/swift-nio/Sources/NIOCore/Codec.swift:578:35
    #26 0x5555a4d3fb54 in NIOCore.ByteToMessageHandler.channelRead(context: NIOCore.ChannelHandlerContext, data: NIOCore.NIOAny) -> () /src/swift-nio/Sources/NIOCore/Codec.swift:651:29
    #27 0x5555a4d29bf9 in NIOCore.ChannelHandlerContext.(invokeChannelRead in _F5AC316541457BD146E3694279514AA3)(NIOCore.NIOAny) -> () /src/swift-nio/Sources/NIOCore/ChannelPipeline.swift:1702:28
    #28 0x5555a4d2753e in NIOCore.ChannelPipeline.(fireChannelRead0 in _F5AC316541457BD146E3694279514AA3)(NIOCore.NIOAny) -> () /src/swift-nio/Sources/NIOCore/ChannelPipeline.swift:897:29
    #29 0x5555a4d2753e in NIOCore.ChannelPipeline.fireChannelRead(NIOCore.NIOAny) -> () /src/swift-nio/Sources/NIOCore/ChannelPipeline.swift:655:13
    #30 0x5555a4ea5064 in generic specialization <NIOCore.ByteBuffer> of NIOEmbedded.EmbeddedChannel.writeInbound<A>(A) throws -> NIOEmbedded.EmbeddedChannel.BufferState /src/swift-nio/swift-nio-fuzz/<compiler-generated>
    #31 0x5555a4ea4a61 in swift_nio_http1_fuzz.test(Swift.UnsafeRawPointer, Swift.Int) -> Swift.Int32 /src/swift-nio/swift-nio-fuzz/Sources/swift-nio-http1-fuzz/main.swift:12:21
    #32 0x5555a4ea478f in LLVMFuzzerTestOneInput /src/swift-nio/swift-nio-fuzz/<compiler-generated>
    #33 0x5555a4c036f0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:617:13
    #34 0x5555a4bf7061 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #35 0x5555a4bfc10d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #36 0x5555a4c17052 in main /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #37 0x7f030f5c2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #38 0x5555a4bf388d in _start (/out/swift-nio-http1-fuzz-release+0x21888d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
