=================================================================
==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x51a000000b30 at pc 0x55d2549c0044 bp 0x7f8ba074bd00 sp 0x7f8ba074b4c0
WRITE of size 640 at 0x51a000000b30 thread T17
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x55d2549c0043 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    #1 0x55d254b311ee in ih264d_fmt_conv_420sp_to_420p /src/libavc/decoder/ih264d_format_conv.c:611:13
    #2 0x55d254b311ee in ih264d_format_convert /src/libavc/decoder/ih264d_format_conv.c:724:9
    #3 0x55d254ba0ace in ih264d_decode_picture_thread /src/libavc/decoder/ih264d_thread_parse_decode.c:644:13
    #4 0x55d2549bfbf8 in asan_thread_start(void*) /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:239:28
    #5 0x7f8ba53cb608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 9a65bb469e45a1c6fbcffae5b82a2fd7a69eb479)
    #6 0x7f8ba52a7352 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x11f352) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __asan_memcpy--ih264d_fmt_conv_420sp_to_420p--ih264d_format_convert
0x51a000000b30 is located 0 bytes after 1200-byte region [0x51a000000680,0x51a000000b30)
allocated by thread T0 here:
    #0 0x55d2549c2b67 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:142:3
    #1 0x55d254a02bc4 in iv_aligned_malloc /src/libavc/fuzzer/svc_dec_fuzzer.cpp:85:13
    #2 0x55d254a02bc4 in Codec::allocFrame() /src/libavc/fuzzer/svc_dec_fuzzer.cpp:308:48
    #3 0x55d254a038b1 in Codec::decodeFrame(unsigned char const*, unsigned long, unsigned long*) /src/libavc/fuzzer/svc_dec_fuzzer.cpp:399:9
    #4 0x55d254a0414e in LLVMFuzzerTestOneInput /src/libavc/fuzzer/svc_dec_fuzzer.cpp:437:22
    #5 0x55d2548b62f0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #6 0x55d2548a1565 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #7 0x55d2548a6fff in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #8 0x55d2548d22a2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7f8ba51ac082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: ___interceptor_posix_memalign--iv_aligned_malloc--Codec::allocFrame()
Thread T17 created by T0 here:
    #0 0x55d2549a7c41 in pthread_create /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:250:3
    #1 0x55d254a5de65 in isvcd_parse_decode_slice /src/libavc/decoder/svc/isvcd_parse_slice.c
    #2 0x55d254a4bb43 in isvcd_parse_nal_unit /src/libavc/decoder/svc/isvcd_parse_headers.c:1005:40
    #3 0x55d254a1686c in isvcd_video_decode /src/libavc/decoder/svc/isvcd_api.c:5292:27
    #4 0x55d254a0360e in Codec::decodeFrame(unsigned char const*, unsigned long, unsigned long*) /src/libavc/fuzzer/svc_dec_fuzzer.cpp:375:11
    #5 0x55d254a0414e in LLVMFuzzerTestOneInput /src/libavc/fuzzer/svc_dec_fuzzer.cpp:437:22
    #6 0x55d2548b62f0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #7 0x55d2548a1565 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #8 0x55d2548a6fff in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #9 0x55d2548d22a2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7f8ba51ac082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: ___interceptor_pthread_create--isvcd_parse_decode_slice--isvcd_parse_nal_unit
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libavc/decoder/ih264d_format_conv.c:611:13 in ih264d_fmt_conv_420sp_to_420p
Shadow bytes around the buggy address:
  0x51a000000880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x51a000000900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x51a000000980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x51a000000a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x51a000000a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x51a000000b00: 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa fa fa
  0x51a000000b80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x51a000000c00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x51a000000c80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x51a000000d00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x51a000000d80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
