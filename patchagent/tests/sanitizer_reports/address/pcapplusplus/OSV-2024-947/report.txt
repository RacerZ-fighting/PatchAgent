=================================================================
==18==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5070000027c4 at pc 0x55e2562595ac bp 0x7ffd34858dd0 sp 0x7ffd34858dc8
READ of size 1 at 0x5070000027c4 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x55e2562595ab in pcpp::SomeIpSdEntry::SomeIpSdEntry(pcpp::SomeIpSdLayer const*, unsigned long) /src/PcapPlusPlus/Packet++/src/SomeIpSdLayer.cpp:243:62
    #1 0x55e25625b27b in pcpp::SomeIpSdLayer::getEntries() const /src/PcapPlusPlus/Packet++/src/SomeIpSdLayer.cpp:501:16
    #2 0x55e25618dd37 in readParsedPacket(pcpp::Packet, pcpp::Layer*) /src/PcapPlusPlus/Tests/Fuzzers/ReadParsedPacket.h:66:32
    #3 0x55e25618c874 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:66:5
    #4 0x55e2560401d0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #5 0x55e25602b445 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #6 0x55e256030edf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #7 0x55e25605c182 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7f90574b3082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #9 0x55e25602362d in _start (/out/FuzzTarget+0x1b762d)

DEDUP_TOKEN: pcpp::SomeIpSdEntry::SomeIpSdEntry(pcpp::SomeIpSdLayer const*, unsigned long)--pcpp::SomeIpSdLayer::getEntries() const--readParsedPacket(pcpp::Packet, pcpp::Layer*)
0x5070000027c4 is located 2 bytes after 66-byte region [0x507000002780,0x5070000027c2)
allocated by thread T0 here:
    #0 0x55e25618947d in operator new[](unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:89:3
    #1 0x55e2561a0980 in pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:338:28
    #2 0x55e25619c2b4 in pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:117:22
    #3 0x55e25618c4f7 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:46:14
    #4 0x55e2560401d0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #5 0x55e25602b445 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #6 0x55e256030edf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #7 0x55e25605c182 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7f90574b3082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: operator new[](unsigned long)--pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&)--pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/PcapPlusPlus/Packet++/src/SomeIpSdLayer.cpp:243:62 in pcpp::SomeIpSdEntry::SomeIpSdEntry(pcpp::SomeIpSdLayer const*, unsigned long)
Shadow bytes around the buggy address:
  0x507000002500: 00 00 00 00 00 fa fa fa fa fa 00 00 00 00 00 00
  0x507000002580: 00 00 00 fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x507000002600: 00 fa fa fa fa fa 00 00 00 00 00 00 00 00 00 fa
  0x507000002680: fa fa fa fa 00 00 00 00 00 00 00 00 00 fa fa fa
  0x507000002700: fa fa 00 00 00 00 00 00 00 00 00 fa fa fa fa fa
=>0x507000002780: 00 00 00 00 00 00 00 00[02]fa fa fa fa fa fd fd
  0x507000002800: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd
  0x507000002880: fd fd fd fd fd fd fa fa fa fa fd fd fd fd fd fd
  0x507000002900: fd fd fd fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x507000002980: fd fa fa fa fa fa 00 00 00 00 00 00 00 00 02 fa
  0x507000002a00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18==ABORTING
