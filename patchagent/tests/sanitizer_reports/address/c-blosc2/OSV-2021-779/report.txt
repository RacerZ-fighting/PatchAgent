=================================================================
==15==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5100000001fb at pc 0x55907962d022 bp 0x7ffdf1f48e70 sp 0x7ffdf1f48630
READ of size 8 at 0x5100000001fb thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x55907962d021 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    #1 0x55907967d115 in _blosc_getitem /src/c-blosc2/blosc/blosc2.c:2649:9
    #2 0x559079680037 in blosc2_getitem_ctx /src/c-blosc2/blosc/blosc2.c:2777:12
    #3 0x55907967fd97 in blosc2_getitem /src/c-blosc2/blosc/blosc2.c:2736:12
    #4 0x5590796a84f2 in get_coffset /src/c-blosc2/blosc/frame.c:1723:12
    #5 0x5590796a6be6 in frame_get_lazychunk /src/c-blosc2/blosc/frame.c:1929:8
    #6 0x5590796ae783 in frame_decompress_chunk /src/c-blosc2/blosc/frame.c:2983:8
    #7 0x559079694a19 in blosc2_schunk_decompress_chunk /src/c-blosc2/blosc/schunk.c:915:17
    #8 0x55907966e925 in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_decompress_frame.c:38:15
    #9 0x559079523360 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #10 0x55907950e5d5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #11 0x55907951406f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #12 0x55907953f312 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x7ff83ee36082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #14 0x5590795067bd in _start (/out/decompress_frame_fuzzer+0x10c7bd)

DEDUP_TOKEN: __asan_memcpy--_blosc_getitem--blosc2_getitem_ctx
0x5100000001fb is located 0 bytes after 187-byte region [0x510000000140,0x5100000001fb)
allocated by thread T0 here:
    #0 0x55907962f12f in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x5590799ff5b3 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x55907950e5d5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #3 0x55907951406f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #4 0x55907953f312 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x7ff83ee36082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc2/blosc/blosc2.c:2649:9 in _blosc_getitem
Shadow bytes around the buggy address:
  0x50ffffffff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x50ffffffff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x510000000000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x510000000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 03
  0x510000000100: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
=>0x510000000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00[03]
  0x510000000200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x510000000280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x510000000300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x510000000380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x510000000400: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==15==ABORTING
