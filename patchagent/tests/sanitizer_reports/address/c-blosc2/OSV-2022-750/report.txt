=================================================================
==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5040000000f0 at pc 0x55ef307fd31b bp 0x7ffd54f4d1c0 sp 0x7ffd54f4d1b8
WRITE of size 4 at 0x5040000000f0 thread T0
SCARINESS: 36 (4-byte-write-heap-buffer-overflow)
    #0 0x55ef307fd31a in _sw32 /src/c-blosc2/blosc/blosc-private.h:128:23
    #1 0x55ef307fd31a in serial_blosc /src/c-blosc2/blosc/blosc2.c:1826:7
    #2 0x55ef307fd31a in do_job /src/c-blosc2/blosc/blosc2.c:2024:15
    #3 0x55ef307fbdb5 in blosc_compress_context /src/c-blosc2/blosc/blosc2.c:2294:15
    #4 0x55ef307fda40 in blosc2_compress_ctx /src/c-blosc2/blosc/blosc2.c:2393:12
    #5 0x55ef308217b0 in blosc2_schunk_append_buffer /src/c-blosc2/blosc/schunk.c:1027:16
    #6 0x55ef307f5d0b in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_compress_frame.c:60:15
    #7 0x55ef306aa420 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #8 0x55ef30695695 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #9 0x55ef3069b12f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #10 0x55ef306c63d2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x7f14b3f2d082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #12 0x55ef3068d87d in _start (/out/compress_frame_fuzzer+0x14087d)

DEDUP_TOKEN: _sw32--serial_blosc--do_job
0x5040000000f2 is located 0 bytes after 34-byte region [0x5040000000d0,0x5040000000f2)
allocated by thread T0 here:
    #0 0x55ef307b61ef in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x55ef30821749 in blosc2_schunk_append_buffer /src/c-blosc2/blosc/schunk.c:1024:20
    #2 0x55ef307f5d0b in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_compress_frame.c:60:15
    #3 0x55ef306aa420 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #4 0x55ef30695695 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #5 0x55ef3069b12f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #6 0x55ef306c63d2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #7 0x7f14b3f2d082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_malloc--blosc2_schunk_append_buffer--LLVMFuzzerTestOneInput
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc2/blosc/blosc-private.h:128:23 in _sw32
Shadow bytes around the buggy address:
  0x503ffffffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x503ffffffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x503fffffff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x503fffffff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x504000000000: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 fa
=>0x504000000080: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00[02]fa
  0x504000000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000000180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000000200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000000280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x504000000300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
