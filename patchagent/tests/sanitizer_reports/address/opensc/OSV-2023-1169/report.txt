=================================================================
==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x50600000053c at pc 0x561bfaf97952 bp 0x7ffe5d0e0ad0 sp 0x7ffe5d0e0290
READ of size 64 at 0x50600000053c thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x561bfaf97951 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    #1 0x561bfb4ea20a in epass2003_pkcs15_generate_key /src/opensc/src/pkcs15init/pkcs15-epass2003.c:682:3
    #2 0x561bfafefc28 in sc_pkcs15init_generate_key /src/opensc/src/tests/fuzzing/../../../src/pkcs15init/pkcs15-lib.c:1611:6
    #3 0x561bfb01dd42 in do_generate_key /src/opensc/src/tests/fuzzing/fuzz_pkcs15init.c:207:9
    #4 0x561bfb01ef36 in LLVMFuzzerTestOneInput /src/opensc/src/tests/fuzzing/fuzz_pkcs15init.c:337:5
    #5 0x561bfae8dc90 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #6 0x561bfae78f05 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #7 0x561bfae7e99f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #8 0x561bfaea9c42 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7f9c4640d082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #10 0x561bfae710ed in _start (/out/fuzz_pkcs15init+0x1f30ed)

DEDUP_TOKEN: __asan_memcpy--epass2003_pkcs15_generate_key--sc_pkcs15init_generate_key
0x50600000053c is located 0 bytes after 60-byte region [0x506000000500,0x50600000053c)
allocated by thread T0 here:
    #0 0x561bfaf99a5f in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x561bfb214b04 in epass2003_gen_key /src/opensc/src/libopensc/card-epass2003.c:3111:26
    #2 0x561bfb1f9c5d in epass2003_card_ctl /src/opensc/src/libopensc/card-epass2003.c:3219:10
    #3 0x561bfb079703 in sc_card_ctl /src/opensc/src/libopensc/card.c:1122:7
    #4 0x561bfb4e9927 in epass2003_pkcs15_generate_key /src/opensc/src/pkcs15init/pkcs15-epass2003.c:641:6
    #5 0x561bfafefc28 in sc_pkcs15init_generate_key /src/opensc/src/tests/fuzzing/../../../src/pkcs15init/pkcs15-lib.c:1611:6
    #6 0x561bfb01dd42 in do_generate_key /src/opensc/src/tests/fuzzing/fuzz_pkcs15init.c:207:9
    #7 0x561bfb01ef36 in LLVMFuzzerTestOneInput /src/opensc/src/tests/fuzzing/fuzz_pkcs15init.c:337:5
    #8 0x561bfae8dc90 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #9 0x561bfae78f05 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #10 0x561bfae7e99f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #11 0x561bfaea9c42 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7f9c4640d082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_malloc--epass2003_gen_key--epass2003_card_ctl
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/opensc/src/pkcs15init/pkcs15-epass2003.c:682:3 in epass2003_pkcs15_generate_key
Shadow bytes around the buggy address:
  0x506000000280: 00 00 00 fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x506000000300: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa
  0x506000000380: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00
  0x506000000400: 00 00 00 00 fa fa fa fa 00 00 00 00 00 00 00 fa
  0x506000000480: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa
=>0x506000000500: 00 00 00 00 00 00 00[04]fa fa fa fa fa fa fa fa
  0x506000000580: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x506000000600: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x506000000680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x506000000700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x506000000780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
