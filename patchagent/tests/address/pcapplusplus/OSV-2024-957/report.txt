=================================================================
==18==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x510000000ffa at pc 0x55a65f06c64f bp 0x7fff0eb02270 sp 0x7fff0eb02268
READ of size 2 at 0x510000000ffa thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x55a65f06c64e in pcpp::computeChecksum(pcpp::ScalarBuffer<unsigned short>*, unsigned long) /src/PcapPlusPlus/Packet++/src/PacketUtils.cpp:23:17
    #1 0x55a65f06cfba in pcpp::computePseudoHdrChecksum(unsigned char*, unsigned long, pcpp::IPAddress::AddressType, unsigned char, pcpp::IPAddress, pcpp::IPAddress) /src/PcapPlusPlus/Packet++/src/PacketUtils.cpp:91:18
    #2 0x55a65f0ca8af in pcpp::TcpLayer::calculateChecksum(bool) /src/PcapPlusPlus/Packet++/src/TcpLayer.cpp:284:9
    #3 0x55a65f068087 in pcpp::Packet::computeCalculateFields() /src/PcapPlusPlus/Packet++/src/Packet.cpp:687:14
    #4 0x55a65efb7901 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:69:17
    #5 0x55a65ee6b1d0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #6 0x55a65ee56445 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #7 0x55a65ee5bedf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #8 0x55a65ee87182 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7fbfa291c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #10 0x55a65ee4e62d in _start (/out/FuzzTarget+0x1b762d)

DEDUP_TOKEN: pcpp::computeChecksum(pcpp::ScalarBuffer<unsigned short>*, unsigned long)--pcpp::computePseudoHdrChecksum(unsigned char*, unsigned long, pcpp::IPAddress::AddressType, unsigned char, pcpp::IPAddress, pcpp::IPAddress)--pcpp::TcpLayer::calculateChecksum(bool)
0x510000000ffa is located 0 bytes after 186-byte region [0x510000000f40,0x510000000ffa)
allocated by thread T0 here:
    #0 0x55a65efb447d in operator new[](unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:89:3
    #1 0x55a65efcb980 in pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:338:28
    #2 0x55a65efc72b4 in pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:117:22
    #3 0x55a65efb74f7 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:46:14
    #4 0x55a65ee6b1d0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #5 0x55a65ee56445 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #6 0x55a65ee5bedf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #7 0x55a65ee87182 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7fbfa291c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: operator new[](unsigned long)--pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&)--pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/PcapPlusPlus/Packet++/src/PacketUtils.cpp:23:17 in pcpp::computeChecksum(pcpp::ScalarBuffer<unsigned short>*, unsigned long)
Shadow bytes around the buggy address:
  0x510000000d00: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x510000000d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa
  0x510000000e00: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x510000000e80: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x510000000f00: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
=>0x510000000f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00[02]
  0x510000001000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x510000001080: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x510000001100: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x510000001180: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x510000001200: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18==ABORTING
