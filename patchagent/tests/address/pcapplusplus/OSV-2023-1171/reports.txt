=================================================================
==18==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5070000027d0 at pc 0x561e097b72db bp 0x7fffad421910 sp 0x7fffad421908
READ of size 2 at 0x5070000027d0 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x561e097b72da in countOptions /src/PcapPlusPlus/Packet++/src/SomeIpSdLayer.cpp:656:24
    #1 0x561e097b72da in pcpp::SomeIpSdLayer::SomeIpSdLayer(unsigned char*, unsigned long, pcpp::Layer*, pcpp::Packet*) /src/PcapPlusPlus/Packet++/src/SomeIpSdLayer.cpp:442:17
    #2 0x561e098fd0ea in pcpp::SomeIpLayer::parseSomeIpLayer(unsigned char*, unsigned long, pcpp::Layer*, pcpp::Packet*) /src/PcapPlusPlus/Packet++/src/SomeIpLayer.cpp:84:14
    #3 0x561e098fe575 in pcpp::SomeIpLayer::parseNextLayer() /src/PcapPlusPlus/Packet++/src/SomeIpLayer.cpp:267:16
    #4 0x561e0979438e in pcpp::Packet::setRawPacket(pcpp::RawPacket*, bool, unsigned long, pcpp::OsiModelLayer) /src/PcapPlusPlus/Packet++/src/Packet.cpp:82:13
    #5 0x561e096e9c24 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:60:17
    #6 0x561e0959d7c0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #7 0x561e09588a35 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #8 0x561e0958e4cf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #9 0x561e095b9772 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7fef39e7b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #11 0x561e09580c1d in _start (/out/FuzzTarget+0x1b5c1d)

DEDUP_TOKEN: countOptions--pcpp::SomeIpSdLayer::SomeIpSdLayer(unsigned char*, unsigned long, pcpp::Layer*, pcpp::Packet*)--pcpp::SomeIpLayer::parseSomeIpLayer(unsigned char*, unsigned long, pcpp::Layer*, pcpp::Packet*)
0x5070000027d0 is located 0 bytes after 80-byte region [0x507000002780,0x5070000027d0)
allocated by thread T0 here:
    #0 0x561e096e6a6d in operator new[](unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:89:3
    #1 0x561e096ff1e0 in pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:307:27
    #2 0x561e096fadf5 in pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:107:21
    #3 0x561e096e9b02 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:47:14
    #4 0x561e0959d7c0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #5 0x561e09588a35 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #6 0x561e0958e4cf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #7 0x561e095b9772 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7fef39e7b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: operator new[](unsigned long)--pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&)--pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/PcapPlusPlus/Packet++/src/SomeIpSdLayer.cpp:656:24 in countOptions
Shadow bytes around the buggy address:
  0x507000002500: 00 00 00 00 00 fa fa fa fa fa 00 00 00 00 00 00
  0x507000002580: 00 00 00 fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x507000002600: 00 fa fa fa fa fa 00 00 00 00 00 00 00 00 00 fa
  0x507000002680: fa fa fa fa 00 00 00 00 00 00 00 00 00 fa fa fa
  0x507000002700: fa fa 00 00 00 00 00 00 00 00 00 fa fa fa fa fa
=>0x507000002780: 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa fa fa
  0x507000002800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x507000002880: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x507000002900: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x507000002980: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x507000002a00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18==ABORTING
