=================================================================
==18==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5070000027ce at pc 0x557e171660a6 bp 0x7ffd2d1ca710 sp 0x7ffd2d1ca708
READ of size 16 at 0x5070000027ce thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x557e171660a5 in IPv6Address /src/PcapPlusPlus/Common++/header/IpAddress.h:165:4
    #1 0x557e171660a5 in getTargetIP /src/PcapPlusPlus/Packet++/header/NdpLayer.h:361:11
    #2 0x557e171660a5 in pcpp::NDPNeighborAdvertisementLayer::toString() const /src/PcapPlusPlus/Packet++/src/NdpLayer.cpp:214:79
    #3 0x557e170688f6 in pcpp::Packet::toStringList(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, bool) const /src/PcapPlusPlus/Packet++/src/Packet.cpp:833:31
    #4 0x557e17067de7 in pcpp::Packet::toString(bool) const /src/PcapPlusPlus/Packet++/src/Packet.cpp:821:3
    #5 0x557e16fb661e in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:60:17
    #6 0x557e16e6a1d0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #7 0x557e16e55445 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #8 0x557e16e5aedf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #9 0x557e16e86182 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7fda0c614082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #11 0x557e16e4d62d in _start (/out/FuzzTarget+0x1b762d)

DEDUP_TOKEN: IPv6Address--getTargetIP--pcpp::NDPNeighborAdvertisementLayer::toString() const
0x5070000027ce is located 2 bytes after 76-byte region [0x507000002780,0x5070000027cc)
allocated by thread T0 here:
    #0 0x557e16fb347d in operator new[](unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:89:3
    #1 0x557e16fca980 in pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:338:28
    #2 0x557e16fc62b4 in pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:117:22
    #3 0x557e16fb64f7 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:46:14
    #4 0x557e16e6a1d0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #5 0x557e16e55445 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #6 0x557e16e5aedf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #7 0x557e16e86182 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7fda0c614082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: operator new[](unsigned long)--pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&)--pcpp::IFileReaderDevice::getNextPackets(pcpp::PointerVector<pcpp::RawPacket>&, int)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/PcapPlusPlus/Common++/header/IpAddress.h:165:4 in IPv6Address
Shadow bytes around the buggy address:
  0x507000002500: 00 00 00 00 00 fa fa fa fa fa 00 00 00 00 00 00
  0x507000002580: 00 00 00 fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x507000002600: 00 fa fa fa fa fa 00 00 00 00 00 00 00 00 00 fa
  0x507000002680: fa fa fa fa 00 00 00 00 00 00 00 00 00 fa fa fa
  0x507000002700: fa fa 00 00 00 00 00 00 00 00 00 fa fa fa fa fa
=>0x507000002780: 00 00 00 00 00 00 00 00 00[04]fa fa fa fa 00 00
  0x507000002800: 00 00 00 00 00 00 00 00 fa fa fa fa fd fd fd fd
  0x507000002880: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa
  0x507000002900: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x507000002980: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x507000002a00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18==ABORTING
