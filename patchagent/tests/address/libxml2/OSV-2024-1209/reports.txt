=================================================================
==14==ERROR: AddressSanitizer: heap-use-after-free on address 0x50c0000002d4 at pc 0x5628c4c4a307 bp 0x7fff280f9470 sp 0x7fff280f9468
READ of size 4 at 0x50c0000002d4 thread T0
SCARINESS: 45 (4-byte-read-heap-use-after-free)
    #0 0x5628c4c4a306 in xmlValidateOneElement /src/libxml2/valid.c:5965:12
    #1 0x5628c4c4d9e7 in xmlValidateElement /src/libxml2/valid.c:6188:16
    #2 0x5628c4b51eb6 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/api.c:3017:31
    #3 0x5628c49fb410 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #4 0x5628c49e6685 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #5 0x5628c49ec11f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #6 0x5628c4a173c2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #7 0x7f914fd83082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #8 0x5628c49de86d in _start (/out/api+0x1c586d)

DEDUP_TOKEN: xmlValidateOneElement--xmlValidateElement--LLVMFuzzerTestOneInput
0x50c0000002d4 is located 84 bytes inside of 120-byte region [0x50c000000280,0x50c0000002f8)
freed by thread T0 here:
    #0 0x5628c4b06f46 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:52:3
    #1 0x5628c4b72ccc in xmlHashFree /src/libxml2/hash.c:241:17
    #2 0x5628c4bfe6d4 in xmlFreeDtd /src/libxml2/tree.c:1041:9
    #3 0x5628c4b5f159 in dropNode /src/libxml2/fuzz/api.c:675:13
    #4 0x5628c4b4c426 in incNodeIdx /src/libxml2/fuzz/api.c:572:9
    #5 0x5628c4b4c426 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/api.c:1114:17
    #6 0x5628c49fb410 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #7 0x5628c49e6685 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #8 0x5628c49ec11f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #9 0x5628c4a173c2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7f914fd83082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_free--xmlHashFree--xmlFreeDtd
previously allocated by thread T0 here:
    #0 0x5628c4b071df in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x5628c4b5f39a in xmlFuzzMalloc /src/libxml2/fuzz/fuzz.c:94:11
    #2 0x5628c4c39f5c in xmlAddAttributeDecl /src/libxml2/valid.c:1740:29
    #3 0x5628c4b5a913 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/api.c:2584:24
    #4 0x5628c49fb410 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #5 0x5628c49e6685 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #6 0x5628c49ec11f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #7 0x5628c4a173c2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7f914fd83082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_malloc--xmlFuzzMalloc--xmlAddAttributeDecl
SUMMARY: AddressSanitizer: heap-use-after-free /src/libxml2/valid.c:5965:12 in xmlValidateOneElement
Shadow bytes around the buggy address:
  0x50c000000000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x50c000000080: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
  0x50c000000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa
  0x50c000000180: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x50c000000200: fd fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa
=>0x50c000000280: fd fd fd fd fd fd fd fd fd fd[fd]fd fd fd fd fa
  0x50c000000300: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x50c000000380: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa
  0x50c000000400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa
  0x50c000000480: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x50c000000500: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
