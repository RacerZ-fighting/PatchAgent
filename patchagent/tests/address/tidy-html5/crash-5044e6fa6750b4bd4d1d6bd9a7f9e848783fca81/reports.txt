=================================================================
==14==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f87527a3c20 at pc 0x55f79eaab1fa bp 0x7ffc8421d430 sp 0x7ffc8421cbd0
WRITE of size 598 at 0x7f87527a3c20 thread T0
SCARINESS: 60 (multi-byte-write-stack-buffer-overflow)
    #0 0x55f79eaab1f9 in strcat /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:508:7
    #1 0x55f79ebb37c5 in prvTidystrrep /src/tidy-html5/src/tmbstr.c
    #2 0x55f79eb1236e in tidyMessageCreateInitV /src/tidy-html5/src/messageobj.c:135:5
    #3 0x55f79eb13947 in prvTidytidyMessageCreateWithNode /src/tidy-html5/src/messageobj.c:270:14
    #4 0x55f79eb9fa28 in formatAttributeReport /src/tidy-html5/src/message.c
    #5 0x55f79eb9b222 in vReport /src/tidy-html5/src/message.c:916:23
    #6 0x55f79eb9afdb in prvTidyReport /src/tidy-html5/src/message.c:946:5
    #7 0x55f79eb64ff9 in ParseAttrs /src/tidy-html5/src/lexer.c
    #8 0x55f79eb64ff9 in GetTokenFromStream /src/tidy-html5/src/lexer.c:2894:34
    #9 0x55f79eb64ff9 in prvTidyGetToken /src/tidy-html5/src/lexer.c:2501:12
    #10 0x55f79eb4a96a in ParseXMLElement /src/tidy-html5/src/parser.c:5667:20
    #11 0x55f79eb24abf in ParseHTMLWithNode /src/tidy-html5/src/parser.c:1077:25
    #12 0x55f79eb4a170 in prvTidyParseXMLDocument /src/tidy-html5/src/parser.c:6439:13
    #13 0x55f79eb0cd50 in prvTidyDocParseStream /src/tidy-html5/src/tidylib.c:1502:9
    #14 0x55f79eb0970e in tidyDocParseFile /src/tidy-html5/src/tidylib.c:1178:18
    #15 0x55f79eb0970e in tidyParseFile /src/tidy-html5/src/tidylib.c:1107:12
    #16 0x55f79eb03c6c in TidyXhtml /src/tidy_general_fuzzer.c:128:7
    #17 0x55f79eb03eaf in LLVMFuzzerTestOneInput /src/tidy_general_fuzzer.c:154:3
    #18 0x55f79e9b8330 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #19 0x55f79e9a35a5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #20 0x55f79e9a903f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #21 0x55f79e9d42e2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #22 0x7f8752ef1082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #23 0x55f79e99b78d in _start (/out/tidy_general_fuzzer+0x12478d)

DEDUP_TOKEN: __interceptor_strcat--prvTidystrrep--tidyMessageCreateInitV
Address 0x7f87527a3c20 is located in stack of thread T0 at offset 1056 in frame
    #0 0x55f79ebb360f in prvTidystrrep /src/tidy-html5/src/tmbstr.c:251

DEDUP_TOKEN: prvTidystrrep
  This frame has 1 object(s):
    [32, 1056) 'buf' (line 257) <== Memory access at offset 1056 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/tidy-html5/src/tmbstr.c in prvTidystrrep
Shadow bytes around the buggy address:
  0x7f87527a3980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3b80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f87527a3c00: 00 00 00 00[f3]f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3
  0x7f87527a3c80: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87527a3e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
