=================================================================
==15==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x526000005d90 at pc 0x56308039e752 bp 0x7ffdf42bcfc0 sp 0x7ffdf42bc780
READ of size 31268 at 0x526000005d90 thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x56308039e751 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    #1 0x563080749915 in ZSTD_initDDict_internal /src/c-blosc2/internal-complibs/zstd-1.5.6/decompress/zstd_ddict.c:134:9
    #2 0x563080749915 in ZSTD_createDDict_advanced /src/c-blosc2/internal-complibs/zstd-1.5.6/decompress/zstd_ddict.c:155:39
    #3 0x563080749915 in ZSTD_createDDict /src/c-blosc2/internal-complibs/zstd-1.5.6/decompress/zstd_ddict.c:173:12
    #4 0x5630803f03c9 in initialize_context_decompression /src/c-blosc2/blosc/blosc2.c:2360:27
    #5 0x5630803f03c9 in blosc_run_decompression_with_context /src/c-blosc2/blosc/blosc2.c:2912:8
    #6 0x5630803efa5d in blosc2_decompress_ctx /src/c-blosc2/blosc/blosc2.c:2938:12
    #7 0x563080436f2d in frame_decompress_chunk /src/c-blosc2/blosc/frame.c:3748:24
    #8 0x563080411928 in blosc2_schunk_decompress_chunk /src/c-blosc2/blosc/schunk.c:1100:17
    #9 0x5630803e0054 in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_decompress_frame.c:34:15
    #10 0x563080294a90 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #11 0x56308027fd05 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #12 0x56308028579f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #13 0x5630802b0a42 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #14 0x7f8d92813082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #15 0x563080277eed in _start (/out/decompress_frame_fuzzer+0x166eed)

DEDUP_TOKEN: __asan_memcpy--ZSTD_initDDict_internal--ZSTD_createDDict_advanced
0x526000005d90 is located 0 bytes after 11408-byte region [0x526000003100,0x526000005d90)
allocated by thread T0 here:
    #0 0x5630803a085f in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x56308090c1b3 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x56308027fd05 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #3 0x56308028579f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #4 0x5630802b0a42 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x7f8d92813082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc2/internal-complibs/zstd-1.5.6/decompress/zstd_ddict.c:134:9 in ZSTD_initDDict_internal
Shadow bytes around the buggy address:
  0x526000005b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005b80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x526000005d80: 00 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005e80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005f80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000006000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==15==ABORTING
