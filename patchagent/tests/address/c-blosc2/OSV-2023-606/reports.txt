=================================================================
==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x526000005d90 at pc 0x55bcdd00d022 bp 0x7ffe556863b0 sp 0x7ffe55685b70
READ of size 2784 at 0x526000005d90 thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x55bcdd00d021 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    #1 0x55bcdd30d833 in ZSTD_copyRawBlock /src/c-blosc2/internal-complibs/zstd-1.4.9/decompress/zstd_decompress.c:772:5
    #2 0x55bcdd30d833 in ZSTD_decompressFrame /src/c-blosc2/internal-complibs/zstd-1.4.9/decompress/zstd_decompress.c:865:27
    #3 0x55bcdd30d833 in ZSTD_decompressMultiFrame /src/c-blosc2/internal-complibs/zstd-1.4.9/decompress/zstd_decompress.c:972:32
    #4 0x55bcdd30e2f8 in ZSTD_decompress_usingDDict /src/c-blosc2/internal-complibs/zstd-1.4.9/decompress/zstd_decompress.c:1484:12
    #5 0x55bcdd0676c2 in zstd_wrap_decompress /src/c-blosc2/blosc/blosc2.c:533:12
    #6 0x55bcdd05f25a in blosc_d /src/c-blosc2/blosc/blosc2.c:1597:18
    #7 0x55bcdd0557dd in serial_blosc /src/c-blosc2/blosc/blosc2.c:1685:16
    #8 0x55bcdd0557dd in do_job /src/c-blosc2/blosc/blosc2.c:1850:15
    #9 0x55bcdd05b87d in blosc2_decompress_ctx /src/c-blosc2/blosc/blosc2.c:2509:12
    #10 0x55bcdd08e8fd in frame_decompress_chunk /src/c-blosc2/blosc/frame.c:3006:23
    #11 0x55bcdd074a19 in blosc2_schunk_decompress_chunk /src/c-blosc2/blosc/schunk.c:915:17
    #12 0x55bcdd04e925 in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_decompress_frame.c:38:15
    #13 0x55bcdcf03360 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #14 0x55bcdceee5d5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #15 0x55bcdcef406f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #16 0x55bcdcf1f312 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #17 0x7f57d31fb082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #18 0x55bcdcee67bd in _start (/out/decompress_frame_fuzzer+0x10c7bd)

DEDUP_TOKEN: __asan_memcpy--ZSTD_copyRawBlock--ZSTD_decompressFrame
0x526000005d90 is located 0 bytes after 11408-byte region [0x526000003100,0x526000005d90)
allocated by thread T0 here:
    #0 0x55bcdd00f12f in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x55bcdd3df5b3 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x55bcdceee5d5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #3 0x55bcdcef406f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #4 0x55bcdcf1f312 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x7f57d31fb082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc2/internal-complibs/zstd-1.4.9/decompress/zstd_decompress.c:772:5 in ZSTD_copyRawBlock
Shadow bytes around the buggy address:
  0x526000005b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005b80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x526000005d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x526000005d80: 00 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005e80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000005f80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x526000006000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
