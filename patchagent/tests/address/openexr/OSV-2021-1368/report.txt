=================================================================
==15==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f2d5949fa70 at pc 0x55bcc7fc5898 bp 0x7ffd36764840 sp 0x7ffd36763fd0
READ of size 257 at 0x7f2d5949fa70 thread T0
SCARINESS: 41 (multi-byte-read-stack-buffer-overflow)
    #0 0x55bcc7fc5897 in printf_common(void*, char const*, __va_list_tag*) /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors_format.inc:563:9
    #1 0x55bcc7fc5d94 in vsnprintf /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1652:1
    #2 0x55bcc827a232 in dispatch_print_error /src/openexr/src/lib/OpenEXRCore/internal_structs.c:134:17
    #3 0x55bcc82a7b26 in read_text /src/openexr/src/lib/OpenEXRCore/parse_header.c:221:16
    #4 0x55bcc82a7b26 in pull_attr /src/openexr/src/lib/OpenEXRCore/parse_header.c:1660:10
    #5 0x55bcc82a7b26 in internal_exr_parse_header /src/openexr/src/lib/OpenEXRCore/parse_header.c:2431:18
    #6 0x55bcc8274b64 in exr_start_read /src/openexr/src/lib/OpenEXRCore/context.c:255:49
    #7 0x55bcc807ae06 in runCoreChecks /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1534:10
    #8 0x55bcc807ae06 in Imf_2_5::checkOpenEXRFile(char const*, unsigned long, bool, bool, bool) /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1565:17
    #9 0x55bcc807929f in LLVMFuzzerTestOneInput /src/openexr/src/test/OpenEXRFuzzTest/oss-fuzz/openexr_exrcheck_fuzzer.cc:17:5
    #10 0x55bcc7f2dde0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #11 0x55bcc7f19055 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #12 0x55bcc7f1eaef in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #13 0x55bcc7f49d92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #14 0x7f2d59c6d082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #15 0x55bcc7f1123d in _start (/out/openexr_exrcheck_fuzzer+0x16423d)

DEDUP_TOKEN: printf_common(void*, char const*, __va_list_tag*)--___interceptor_vsnprintf--dispatch_print_error
Address 0x7f2d5949fa70 is located in stack of thread T0 at offset 624 in frame
    #0 0x55bcc82a6cff in internal_exr_parse_header /src/openexr/src/lib/OpenEXRCore/parse_header.c:2332

DEDUP_TOKEN: internal_exr_parse_header
  This frame has 25 object(s):
    [32, 36) 'attrsz.addr.i.i.i' (line 1497)
    [48, 56) 'outstr.i399.i.i' (line 1358)
    [80, 89) 'tmpdata.i371.i.i' (line 1225)
    [112, 116) 'tpun.i339.i.i' (line 1155)
    [128, 136) 'tmpdata.i312.i.i' (line 1090)
    [160, 164) 'tpun.i.i.i' (line 1020)
    [176, 184) 'outstr.i.i.i' (line 1285)
    [208, 209) 'data.i236.i.i' (line 961)
    [224, 240) 'tmpdata.i201.i.i' (line 909)
    [256, 272) 'tmpdata.i.i.i' (line 857)
    [288, 289) 'data.i.i.i' (line 799)
    [304, 320) 'tmpchans.i.i.i' (line 747)
    [336, 337) 'b.i326.i' (line 201)
    [352, 353) 'b.i.i' (line 201)
    [368, 624) 'name.i' (line 1639)
    [688, 944) 'type.i' (line 1639) <== Memory access at offset 624 partially underflows this variable
    [1008, 1012) 'attrsz.i' (line 1642)
    [1024, 1032) 'nattr.i' (line 1643)
    [1056, 1064) 'strptr.i' (line 1644)
    [1088, 1096) 'magic_and_version.i' (line 2250)
    [1120, 1128) 'fileoff.i' (line 2253)
    [1152, 1160) 'nread.i' (line 2254)
    [1184, 1232) 'scratch' (line 2333)
    [1264, 1272) 'curpart' (line 2334)
    [1296, 1297) 'next_byte' (line 2337)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/openexr/src/lib/OpenEXRCore/internal_structs.c:134:17 in dispatch_print_error
Shadow bytes around the buggy address:
  0x7f2d5949f780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2d5949f800: f1 f1 f1 f1 f8 f2 f8 f2 f2 f2 f8 f8 f2 f2 f8 f2
  0x7f2d5949f880: f8 f2 f2 f2 f8 f2 f8 f2 f2 f2 f8 f2 f8 f8 f2 f2
  0x7f2d5949f900: f8 f8 f2 f2 f8 f2 f8 f8 f2 f2 f8 f2 01 f2 00 00
  0x7f2d5949f980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f2d5949fa00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00[f2]f2
  0x7f2d5949fa80: f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
  0x7f2d5949fb00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2d5949fb80: 00 00 00 00 00 00 f2 f2 f2 f2 f2 f2 f2 f2 04 f2
  0x7f2d5949fc00: 00 f2 f2 f2 00 f2 f2 f2 f8 f2 f2 f2 f8 f2 f2 f2
  0x7f2d5949fc80: f8 f2 f2 f2 00 00 00 00 00 00 f2 f2 f2 f2 00 f2
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==15==ABORTING
