=================================================================
==15==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x50b0000000a3 at pc 0x56145d7da237 bp 0x7fff503454b0 sp 0x7fff503454a8
READ of size 1 at 0x50b0000000a3 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x56145d7da236 in fasthuf_read_bits /src/openexr/src/lib/OpenEXRCore/internal_huf.c:1186:38
    #1 0x56145d7da236 in fasthuf_initialize /src/openexr/src/lib/OpenEXRCore/internal_huf.c:1284:17
    #2 0x56145d7d9930 in internal_huf_decompress /src/openexr/src/lib/OpenEXRCore/internal_huf.c:1800:14
    #3 0x56145d7d4197 in internal_exr_undo_piz /src/openexr/src/lib/OpenEXRCore/internal_piz.c:624:14
    #4 0x56145d7aad8a in default_decompress_chunk /src/openexr/src/lib/OpenEXRCore/decoding.c:318:14
    #5 0x56145d7ab6be in exr_decoding_run /src/openexr/src/lib/OpenEXRCore/decoding.c:654:14
    #6 0x56145d5602c2 in readCoreScanlinePart /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1291:18
    #7 0x56145d5602c2 in Imf_2_5::(anonymous namespace)::checkCoreFile(_priv_exr_context_t*, bool, bool) /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1500:17
    #8 0x56145d55ce29 in runCoreChecks /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1615:15
    #9 0x56145d55ce29 in Imf_2_5::checkOpenEXRFile(char const*, unsigned long, bool, bool, bool) /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1655:16
    #10 0x56145d55b29f in LLVMFuzzerTestOneInput /src/openexr/src/test/OpenEXRFuzzTest/oss-fuzz/openexr_exrcorecheck_fuzzer.cc:17:5
    #11 0x56145d40fde0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #12 0x56145d3fb055 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #13 0x56145d400aef in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #14 0x56145d42bd92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #15 0x7fc9fa8fc082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #16 0x56145d3f323d in _start (/out/openexr_exrcorecheck_fuzzer+0x16823d)

DEDUP_TOKEN: fasthuf_read_bits--fasthuf_initialize--internal_huf_decompress
0x50b0000000a3 is located 0 bytes after 99-byte region [0x50b000000040,0x50b0000000a3)
allocated by thread T0 here:
    #0 0x56145d51bbaf in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x56145d7efc26 in internal_decode_alloc_buffer /src/openexr/src/lib/OpenEXRCore/coding.c:261:22
    #2 0x56145d7aa6b1 in default_read_chunk /src/openexr/src/lib/OpenEXRCore/decoding.c:189:14
    #3 0x56145d7ab56b in exr_decoding_run /src/openexr/src/lib/OpenEXRCore/decoding.c:641:10
    #4 0x56145d5602c2 in readCoreScanlinePart /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1291:18
    #5 0x56145d5602c2 in Imf_2_5::(anonymous namespace)::checkCoreFile(_priv_exr_context_t*, bool, bool) /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1500:17
    #6 0x56145d55ce29 in runCoreChecks /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1615:15
    #7 0x56145d55ce29 in Imf_2_5::checkOpenEXRFile(char const*, unsigned long, bool, bool, bool) /src/openexr/src/lib/OpenEXRUtil/ImfCheckFile.cpp:1655:16
    #8 0x56145d55b29f in LLVMFuzzerTestOneInput /src/openexr/src/test/OpenEXRFuzzTest/oss-fuzz/openexr_exrcorecheck_fuzzer.cc:17:5
    #9 0x56145d40fde0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #10 0x56145d3fb055 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #11 0x56145d400aef in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #12 0x56145d42bd92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x7fc9fa8fc082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)

DEDUP_TOKEN: __interceptor_malloc--internal_decode_alloc_buffer--default_read_chunk
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/openexr/src/lib/OpenEXRCore/internal_huf.c:1186:38 in fasthuf_read_bits
Shadow bytes around the buggy address:
  0x50affffffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x50affffffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x50afffffff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x50afffffff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x50b000000000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
=>0x50b000000080: 00 00 00 00[03]fa fa fa fa fa fa fa fa fa fa fa
  0x50b000000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x50b000000180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x50b000000200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x50b000000280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x50b000000300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==15==ABORTING
