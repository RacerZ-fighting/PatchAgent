INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/libultrahdr:/out -v /mnt/data0/zf1025/AICC/oss-patch-build/libultrahdr/OSV-2024-476/poc.bin:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce ultrahdr_dec_fuzzer -runs=100.
+ FUZZER=ultrahdr_dec_fuzzer
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer ultrahdr_dec_fuzzer -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/ultrahdr_dec_fuzzer -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 191594739
INFO: Loaded 1 modules   (22658 inline 8-bit counters): 22658 [0x55649d900dc0, 0x55649d906642), 
INFO: Loaded 1 PC tables (22658 PCs): 22658 [0x55649d906648,0x55649d95ee68), 
/out/ultrahdr_dec_fuzzer: Running 1 inputs 100 time(s) each.
Running: /testcase
=================================================================
[1m[31m==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x502000000411 at pc 0x55649d4e0299 bp 0x7ffc9ffa73f0 sp 0x7ffc9ffa73e8
[1m[0m[1m[34mREAD of size 1 at 0x502000000411 thread T0[1m[0m
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x55649d4e0298 in ultrahdr::getYuv420Pixel(ultrahdr::jpegr_uncompressed_struct*, unsigned long, unsigned long) /src/libultrahdr/lib/src/gainmapmath.cpp:634:20
    #1 0x55649d4cc338 in operator() /src/libultrahdr/lib/src/jpegr.cpp:1185:33
    #2 0x55649d4cc338 in __invoke<(lambda at /src/libultrahdr/lib/src/jpegr.cpp:1176:39) &> /usr/local/bin/../include/c++/v1/__type_traits/invoke.h:344:25
    #3 0x55649d4cc338 in __call<(lambda at /src/libultrahdr/lib/src/jpegr.cpp:1176:39) &> /usr/local/bin/../include/c++/v1/__type_traits/invoke.h:419:5
    #4 0x55649d4cc338 in operator() /usr/local/bin/../include/c++/v1/__functional/function.h:169:12
    #5 0x55649d4cc338 in std::__1::__function::__func<ultrahdr::JpegR::applyGainMap(ultrahdr::jpegr_uncompressed_struct*, ultrahdr::jpegr_uncompressed_struct*, ultrahdr::ultrahdr_metadata_struct*, ultrahdr::ultrahdr_output_format, float, ultrahdr::jpegr_uncompressed_struct*)::$_0, std::__1::allocator<ultrahdr::JpegR::applyGainMap(ultrahdr::jpegr_uncompressed_struct*, ultrahdr::jpegr_uncompressed_struct*, ultrahdr::ultrahdr_metadata_struct*, ultrahdr::ultrahdr_output_format, float, ultrahdr::jpegr_uncompressed_struct*)::$_0>, void ()>::operator()() /usr/local/bin/../include/c++/v1/__functional/function.h:311:10
    #6 0x55649d4bfc1e in operator() /usr/local/bin/../include/c++/v1/__functional/function.h:428:12
    #7 0x55649d4bfc1e in operator() /usr/local/bin/../include/c++/v1/__functional/function.h:981:10
    #8 0x55649d4bfc1e in ultrahdr::JpegR::applyGainMap(ultrahdr::jpegr_uncompressed_struct*, ultrahdr::jpegr_uncompressed_struct*, ultrahdr::ultrahdr_metadata_struct*, ultrahdr::ultrahdr_output_format, float, ultrahdr::jpegr_uncompressed_struct*) /src/libultrahdr/lib/src/jpegr.cpp:1279:3
    #9 0x55649d4beb4f in ultrahdr::JpegR::decodeJPEGR(ultrahdr::jpegr_compressed_struct*, ultrahdr::jpegr_uncompressed_struct*, float, ultrahdr::jpegr_exif_struct*, ultrahdr::ultrahdr_output_format, ultrahdr::jpegr_uncompressed_struct*, ultrahdr::ultrahdr_metadata_struct*) /src/libultrahdr/lib/src/jpegr.cpp:806:3
    #10 0x55649d4b39bd in UltraHdrDecFuzzer::process() /src/libultrahdr/fuzzer/ultrahdr_dec_fuzzer.cpp:59:17
    #11 0x55649d4b3ddf in LLVMFuzzerTestOneInput /src/libultrahdr/fuzzer/ultrahdr_dec_fuzzer.cpp:66:14
    #12 0x55649d367ef0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #13 0x55649d353165 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #14 0x55649d358bff in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #15 0x55649d383ea2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0x7f1b3c7f4082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #17 0x55649d34b34d in _start (/out/ultrahdr_dec_fuzzer+0xe734d)

DEDUP_TOKEN: ultrahdr::getYuv420Pixel(ultrahdr::jpegr_uncompressed_struct*, unsigned long, unsigned long)--operator()--__invoke<(lambda at /src/libultrahdr/lib/src/jpegr.cpp:1176:39) &>
[1m[32m0x502000000411 is located 0 bytes after 1-byte region [0x502000000410,0x502000000411)
[1m[0m[1m[35mallocated by thread T0 here:[1m[0m
    #0 0x55649d4b108d in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:86:3
    #1 0x55649d4ccc47 in __libcpp_operator_new<unsigned long> /usr/local/bin/../include/c++/v1/new:271:10
    #2 0x55649d4ccc47 in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:295:10
    #3 0x55649d4ccc47 in allocate /usr/local/bin/../include/c++/v1/__memory/allocator.h:125:32
    #4 0x55649d4ccc47 in __allocate_at_least<std::__1::allocator<unsigned char> > /usr/local/bin/../include/c++/v1/__memory/allocate_at_least.h:55:19
    #5 0x55649d4ccc47 in __split_buffer /usr/local/bin/../include/c++/v1/__split_buffer:343:25
    #6 0x55649d4ccc47 in std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long, unsigned char const&) /usr/local/bin/../include/c++/v1/vector:1111:49
    #7 0x55649d4f8c81 in ultrahdr::JpegDecoderHelper::decode(void const*, int, ultrahdr::decode_mode_t) /src/libultrahdr/lib/src/jpegdecoderhelper.cpp
    #8 0x55649d4be256 in ultrahdr::JpegR::decodeJPEGR(ultrahdr::jpegr_compressed_struct*, ultrahdr::jpegr_uncompressed_struct*, float, ultrahdr::jpegr_exif_struct*, ultrahdr::ultrahdr_output_format, ultrahdr::jpegr_uncompressed_struct*, ultrahdr::ultrahdr_metadata_struct*) /src/libultrahdr/lib/src/jpegr.cpp:671:28
    #9 0x55649d4b39bd in UltraHdrDecFuzzer::process() /src/libultrahdr/fuzzer/ultrahdr_dec_fuzzer.cpp:59:17
    #10 0x55649d4b3ddf in LLVMFuzzerTestOneInput /src/libultrahdr/fuzzer/ultrahdr_dec_fuzzer.cpp:66:14
    #11 0x55649d367ef0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #12 0x55649d353165 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #13 0x55649d358bff in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #14 0x55649d383ea2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #15 0x7f1b3c7f4082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_operator_new<unsigned long>--__libcpp_allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libultrahdr/lib/src/gainmapmath.cpp:634:20 in ultrahdr::getYuv420Pixel(ultrahdr::jpegr_uncompressed_struct*, unsigned long, unsigned long)
Shadow bytes around the buggy address:
  0x502000000180: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x502000000200: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m
  0x502000000280: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m
  0x502000000300: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m04[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m
  0x502000000380: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m
=>0x502000000400: [1m[31mfa[1m[0m [1m[31mfa[1m[0m[[1m[0m01[1m[0m][1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m01[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x502000000480: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m
  0x502000000500: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x502000000580: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m
  0x502000000600: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x502000000680: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           [1m[0m00[1m[0m
  Partially addressable: [1m[0m01[1m[0m [1m[0m02[1m[0m [1m[0m03[1m[0m [1m[0m04[1m[0m [1m[0m05[1m[0m [1m[0m06[1m[0m [1m[0m07[1m[0m 
  Heap left redzone:       [1m[31mfa[1m[0m
  Freed heap region:       [1m[35mfd[1m[0m
  Stack left redzone:      [1m[31mf1[1m[0m
  Stack mid redzone:       [1m[31mf2[1m[0m
  Stack right redzone:     [1m[31mf3[1m[0m
  Stack after return:      [1m[35mf5[1m[0m
  Stack use after scope:   [1m[35mf8[1m[0m
  Global redzone:          [1m[31mf9[1m[0m
  Global init order:       [1m[36mf6[1m[0m
  Poisoned by user:        [1m[34mf7[1m[0m
  Container overflow:      [1m[34mfc[1m[0m
  Array cookie:            [1m[31mac[1m[0m
  Intra object redzone:    [1m[33mbb[1m[0m
  ASan internal:           [1m[33mfe[1m[0m
  Left alloca redzone:     [1m[34mca[1m[0m
  Right alloca redzone:    [1m[34mcb[1m[0m
==14==ABORTING
