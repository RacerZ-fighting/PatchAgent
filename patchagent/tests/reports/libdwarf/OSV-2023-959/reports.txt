INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/libdwarf:/out -v /mnt/data0/zf1025/AICC/oss-patch-build/libdwarf/OSV-2023-959/poc.bin:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce fuzz_init_path -runs=100.
+ FUZZER=fuzz_init_path
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer fuzz_init_path -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/fuzz_init_path -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3994284709
INFO: Loaded 1 modules   (11772 inline 8-bit counters): 11772 [0x558147a18560, 0x558147a1b35c), 
INFO: Loaded 1 PC tables (11772 PCs): 11772 [0x558147a1b360,0x558147a49320), 
/out/fuzz_init_path: Running 1 inputs 100 time(s) each.
Running: /testcase
=================================================================
[1m[31m==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5030000000e4 at pc 0x55814785ffe2 bp 0x7fff02f9e270 sp 0x7fff02f9da30
[1m[0m[1m[34mREAD of size 8 at 0x5030000000e4 thread T0[1m[0m
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x55814785ffe1 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    #1 0x5581478ac50e in _dwarf_memcpy_noswap_bytes /src/libdwarf/src/lib/libdwarf/dwarf_memcpy_swap.c:49:5
    #2 0x5581478abd68 in fill_in_uni_arch_64 /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:1213:9
    #3 0x5581478aa929 in _dwarf_object_detector_universal_head_fd /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:1340:15
    #4 0x5581478aa929 in _dwarf_macho_inner_object_fd /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:948:12
    #5 0x5581478aa929 in _dwarf_macho_object_access_internals_init /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:1027:16
    #6 0x5581478aa929 in _dwarf_macho_object_access_init /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:1138:11
    #7 0x5581478aa929 in _dwarf_macho_setup /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:880:11
    #8 0x55814789fda1 in dwarf_init_path_dl_a /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:351:15
    #9 0x55814789ffbb in dwarf_init_path /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:156:12
    #10 0x5581478ae3f2 in _dwarf_debuglink_finder_internal /src/libdwarf/src/lib/libdwarf/dwarf_object_detector.c:850:11
    #11 0x5581478ae3f2 in dwarf_object_detector_path_b /src/libdwarf/src/lib/libdwarf/dwarf_object_detector.c:961:15
    #12 0x55814789fa88 in dwarf_init_path_dl_a /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:285:15
    #13 0x55814789ffbb in dwarf_init_path /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:156:12
    #14 0x55814789f632 in LLVMFuzzerTestOneInput /src/libdwarf/fuzz/fuzz_init_path.c:44:3
    #15 0x558147756320 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #16 0x558147741595 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #17 0x55814774702f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #18 0x5581477722d2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #19 0x7fb269f9f082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #20 0x55814773977d in _start (/out/fuzz_init_path+0xa677d)

DEDUP_TOKEN: __asan_memcpy--_dwarf_memcpy_noswap_bytes--fill_in_uni_arch_64
[1m[32m0x5030000000e4 is located 0 bytes after 20-byte region [0x5030000000d0,0x5030000000e4)
[1m[0m[1m[35mallocated by thread T0 here:[1m[0m
    #0 0x5581478622b9 in calloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:75:3
    #1 0x5581478aa82c in _dwarf_object_detector_universal_head_fd /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:1323:36
    #2 0x5581478aa82c in _dwarf_macho_inner_object_fd /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:948:12
    #3 0x5581478aa82c in _dwarf_macho_object_access_internals_init /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:1027:16
    #4 0x5581478aa82c in _dwarf_macho_object_access_init /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:1138:11
    #5 0x5581478aa82c in _dwarf_macho_setup /src/libdwarf/src/lib/libdwarf/dwarf_machoread.c:880:11
    #6 0x55814789fda1 in dwarf_init_path_dl_a /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:351:15
    #7 0x55814789ffbb in dwarf_init_path /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:156:12
    #8 0x5581478ae3f2 in _dwarf_debuglink_finder_internal /src/libdwarf/src/lib/libdwarf/dwarf_object_detector.c:850:11
    #9 0x5581478ae3f2 in dwarf_object_detector_path_b /src/libdwarf/src/lib/libdwarf/dwarf_object_detector.c:961:15
    #10 0x55814789fa88 in dwarf_init_path_dl_a /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:285:15
    #11 0x55814789ffbb in dwarf_init_path /src/libdwarf/src/lib/libdwarf/dwarf_generic_init.c:156:12
    #12 0x55814789f632 in LLVMFuzzerTestOneInput /src/libdwarf/fuzz/fuzz_init_path.c:44:3
    #13 0x558147756320 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #14 0x558147741595 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #15 0x55814774702f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #16 0x5581477722d2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #17 0x7fb269f9f082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)

DEDUP_TOKEN: __interceptor_calloc--_dwarf_object_detector_universal_head_fd--_dwarf_macho_inner_object_fd
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libdwarf/src/lib/libdwarf/dwarf_memcpy_swap.c:49:5 in _dwarf_memcpy_noswap_bytes
Shadow bytes around the buggy address:
  0x502ffffffe00: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x502ffffffe80: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x502fffffff00: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x502fffffff80: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x503000000000: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
=>0x503000000080: [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m[[1m[0m04[1m[0m][1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x503000000100: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x503000000180: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x503000000200: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x503000000280: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x503000000300: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           [1m[0m00[1m[0m
  Partially addressable: [1m[0m01[1m[0m [1m[0m02[1m[0m [1m[0m03[1m[0m [1m[0m04[1m[0m [1m[0m05[1m[0m [1m[0m06[1m[0m [1m[0m07[1m[0m 
  Heap left redzone:       [1m[31mfa[1m[0m
  Freed heap region:       [1m[35mfd[1m[0m
  Stack left redzone:      [1m[31mf1[1m[0m
  Stack mid redzone:       [1m[31mf2[1m[0m
  Stack right redzone:     [1m[31mf3[1m[0m
  Stack after return:      [1m[35mf5[1m[0m
  Stack use after scope:   [1m[35mf8[1m[0m
  Global redzone:          [1m[31mf9[1m[0m
  Global init order:       [1m[36mf6[1m[0m
  Poisoned by user:        [1m[34mf7[1m[0m
  Container overflow:      [1m[34mfc[1m[0m
  Array cookie:            [1m[31mac[1m[0m
  Intra object redzone:    [1m[33mbb[1m[0m
  ASan internal:           [1m[33mfe[1m[0m
  Left alloca redzone:     [1m[34mca[1m[0m
  Right alloca redzone:    [1m[34mcb[1m[0m
==14==ABORTING
