INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/assimp:/out -v /mnt/data0/zf1025/AICC/oss-patch-build/assimp/OSV-2024-1324/poc.bin:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce assimp_fuzzer -runs=100.
+ FUZZER=assimp_fuzzer
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer assimp_fuzzer -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/assimp_fuzzer -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1267012308
INFO: Loaded 1 modules   (250844 inline 8-bit counters): 250844 [0x55b0dc784608, 0x55b0dc7c19e4), 
INFO: Loaded 1 PC tables (250844 PCs): 250844 [0x55b0dc7c19e8,0x55b0dcb957a8), 
/out/assimp_fuzzer: Running 1 inputs 100 time(s) each.
Running: /testcase
Info,  T0: Load $$$___magic___$$$.
Info,  T0: File extension not known, trying signature-based detection
Info,  T0: Found a matching importer for this file format: LightWave Scene Importer.
Info,  T0: Import root directory is './'
Info,  T0: LWS file format version is AddCaLWMO
Error, T0: LWS: Unexpected keyword: '<Light|Object|Camera>Motion'
Info,  T0: Entering post processing pipeline
Info,  T0: Points: 0, Lines: 0, Triangles: 1, Polygons: 0 (Meshes, X = removed)
Warn,  T0: Simplified dummy tracks with just one key
Info,  T0: FindInvalidDataProcess finished. Found issues ...
Error, T0: Failed to compute tangents; need UV data in channel0
Info,  T0: JoinVerticesProcess finished | Verts in: 288 out: 132 | ~54.1667
Info,  T0: Cache relevant are 1 meshes (96 faces). Average output ACMR is 1.375
Info,  T0: Leaving post processing pipeline
=================================================================
[1m[31m==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x516000003290 at pc 0x55b0dbf4b958 bp 0x7ffc66e8ed10 sp 0x7ffc66e8ed08
[1m[0m[1m[34mREAD of size 4 at 0x516000003290 thread T0[1m[0m
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x55b0dbf4b957 in Assimp::FBXExporter::WriteObjects() /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:2053:34
    #1 0x55b0dbf18ec3 in WriteAllNodes /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:308:5
    #2 0x55b0dbf18ec3 in Assimp::FBXExporter::ExportBinary(char const*, Assimp::IOSystem*) /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:178:5
    #3 0x55b0dbf18a87 in Assimp::ExportSceneFBX(char const*, Assimp::IOSystem*, aiScene const*, Assimp::ExportProperties const*) /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:115:18
    #4 0x55b0db12f5eb in Assimp::Exporter::Export(aiScene const*, char const*, char const*, unsigned int, Assimp::ExportProperties const*) /src/assimp/code/Common/Exporter.cpp:495:17
    #5 0x55b0db12d591 in Assimp::Exporter::ExportToBlob(aiScene const*, char const*, unsigned int, Assimp::ExportProperties const*) /src/assimp/code/Common/Exporter.cpp:353:23
    #6 0x55b0db0c1f8e in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:62:14
    #7 0x55b0daf769b0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #8 0x55b0daf61c25 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #9 0x55b0daf676bf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #10 0x55b0daf92962 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x7f956b0d8082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #12 0x55b0daf59e0d in _start (/out/assimp_fuzzer+0x894e0d)

DEDUP_TOKEN: Assimp::FBXExporter::WriteObjects()--WriteAllNodes--Assimp::FBXExporter::ExportBinary(char const*, Assimp::IOSystem*)
[1m[32m0x516000003290 is located 0 bytes after 528-byte region [0x516000003080,0x516000003290)
[1m[0m[1m[35mallocated by thread T0 here:[1m[0m
    #0 0x55b0db0bfb4d in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:86:3
    #1 0x55b0dbca52ae in __libcpp_operator_new<unsigned long> /usr/local/bin/../include/c++/v1/new:271:10
    #2 0x55b0dbca52ae in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:295:10
    #3 0x55b0dbca52ae in allocate /usr/local/bin/../include/c++/v1/__memory/allocator.h:125:32
    #4 0x55b0dbca52ae in __allocate_at_least<std::__1::allocator<int> > /usr/local/bin/../include/c++/v1/__memory/allocate_at_least.h:55:19
    #5 0x55b0dbca52ae in __vallocate /usr/local/bin/../include/c++/v1/vector:741:25
    #6 0x55b0dbca52ae in void std::__1::vector<int, std::__1::allocator<int>>::__init_with_size[abi:ne180100]<int*, int*>(int*, int*, unsigned long) /usr/local/bin/../include/c++/v1/vector:759:7
    #7 0x55b0dbf7afec in vector /usr/local/bin/../include/c++/v1/vector:1195:3
    #8 0x55b0dbf7afec in construct<std::__1::vector<int, std::__1::allocator<int> >, const std::__1::vector<int, std::__1::allocator<int> > &> /usr/local/bin/../include/c++/v1/__memory/allocator.h:173:24
    #9 0x55b0dbf7afec in construct<std::__1::vector<int, std::__1::allocator<int> >, const std::__1::vector<int, std::__1::allocator<int> > &, void> /usr/local/bin/../include/c++/v1/__memory/allocator_traits.h:296:9
    #10 0x55b0dbf7afec in std::__1::vector<int, std::__1::allocator<int>>* std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>::__push_back_slow_path<std::__1::vector<int, std::__1::allocator<int>> const&>(std::__1::vector<int, std::__1::allocator<int>> const&) /usr/local/bin/../include/c++/v1/vector:1453:3
    #11 0x55b0dbf326de in push_back /usr/local/bin/../include/c++/v1/vector:1467:13
    #12 0x55b0dbf326de in Assimp::FBXExporter::WriteObjects() /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:1146:23
    #13 0x55b0dbf18ec3 in WriteAllNodes /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:308:5
    #14 0x55b0dbf18ec3 in Assimp::FBXExporter::ExportBinary(char const*, Assimp::IOSystem*) /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:178:5
    #15 0x55b0dbf18a87 in Assimp::ExportSceneFBX(char const*, Assimp::IOSystem*, aiScene const*, Assimp::ExportProperties const*) /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:115:18
    #16 0x55b0db12f5eb in Assimp::Exporter::Export(aiScene const*, char const*, char const*, unsigned int, Assimp::ExportProperties const*) /src/assimp/code/Common/Exporter.cpp:495:17
    #17 0x55b0db12d591 in Assimp::Exporter::ExportToBlob(aiScene const*, char const*, unsigned int, Assimp::ExportProperties const*) /src/assimp/code/Common/Exporter.cpp:353:23
    #18 0x55b0db0c1f8e in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:62:14
    #19 0x55b0daf769b0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #20 0x55b0daf61c25 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #21 0x55b0daf676bf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #22 0x55b0daf92962 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #23 0x7f956b0d8082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_operator_new<unsigned long>--__libcpp_allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/assimp/code/AssetLib/FBX/FBXExporter.cpp:2053:34 in Assimp::FBXExporter::WriteObjects()
Shadow bytes around the buggy address:
  0x516000003000: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x516000003080: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x516000003100: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x516000003180: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x516000003200: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
=>0x516000003280: [1m[0m00[1m[0m [1m[0m00[1m[0m[[1m[31mfa[1m[0m][1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x516000003300: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x516000003380: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x516000003400: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x516000003480: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x516000003500: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           [1m[0m00[1m[0m
  Partially addressable: [1m[0m01[1m[0m [1m[0m02[1m[0m [1m[0m03[1m[0m [1m[0m04[1m[0m [1m[0m05[1m[0m [1m[0m06[1m[0m [1m[0m07[1m[0m 
  Heap left redzone:       [1m[31mfa[1m[0m
  Freed heap region:       [1m[35mfd[1m[0m
  Stack left redzone:      [1m[31mf1[1m[0m
  Stack mid redzone:       [1m[31mf2[1m[0m
  Stack right redzone:     [1m[31mf3[1m[0m
  Stack after return:      [1m[35mf5[1m[0m
  Stack use after scope:   [1m[35mf8[1m[0m
  Global redzone:          [1m[31mf9[1m[0m
  Global init order:       [1m[36mf6[1m[0m
  Poisoned by user:        [1m[34mf7[1m[0m
  Container overflow:      [1m[34mfc[1m[0m
  Array cookie:            [1m[31mac[1m[0m
  Intra object redzone:    [1m[33mbb[1m[0m
  ASan internal:           [1m[33mfe[1m[0m
  Left alloca redzone:     [1m[34mca[1m[0m
  Right alloca redzone:    [1m[34mcb[1m[0m
==14==ABORTING
