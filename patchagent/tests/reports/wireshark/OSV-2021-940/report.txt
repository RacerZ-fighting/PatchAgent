INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/wireshark:/out -v /mnt/data0/zf1025/AICC/oss-patch-build/wireshark/OSV-2021-940/poc.bin:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce fuzzshark_media_type-json -runs=100.
+ FUZZER=fuzzshark_media_type-json
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer fuzzshark_media_type-json -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/fuzzshark_media_type-json -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase -max_len=1024 < /dev/null
oss-fuzzshark: disabling: ip
oss-fuzzshark: disabling: udp
oss-fuzzshark: disabling: udplite
oss-fuzzshark: disabling: ospf
oss-fuzzshark: disabling: bgp
oss-fuzzshark: disabling: dhcp
oss-fuzzshark: disabling: snort
oss-fuzzshark: configured for dissector: json in table: media_type
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1402761359
INFO: Loaded 1 modules   (368314 inline 8-bit counters): 368314 [0x8ebf190, 0x8f1904a), 
INFO: Loaded 1 PC tables (368314 PCs): 368314 [0x8f19050,0x94b7bf0), 
/out/fuzzshark_media_type-json: Running 1 inputs 100 time(s) each.
Running: /testcase
=================================================================
[1m[31m==18==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5020000dfbb1 at pc 0x0000012c20dd bp 0x7ffcda0bdb20 sp 0x7ffcda0bdb18
[1m[0m[1m[34mWRITE of size 1 at 0x5020000dfbb1 thread T0[1m[0m
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x12c20dc in json_string_unescape /src/wireshark/epan/dissectors/packet-json.c:363:9
    #1 0x12bf48d in after_value /src/wireshark/epan/dissectors/packet-json.c:777:20
    #2 0x266fbd3 in execute_callbacks /src/wireshark/epan/tvbparse.c:1286:39
    #3 0x266f820 in tvbparse_get /src/wireshark/epan/tvbparse.c:1347:9
    #4 0x12bed1e in dissect_json /src/wireshark/epan/dissectors/packet-json.c:541:9
    #5 0x6ef0d4 in call_dissector_through_handle /src/wireshark/epan/packet.c:730:9
    #6 0x6ef0d4 in call_dissector_work /src/wireshark/epan/packet.c:823:9
    #7 0x6f7f20 in call_dissector_only /src/wireshark/epan/packet.c:3243:8
    #8 0x6f7f20 in call_all_postdissectors /src/wireshark/epan/packet.c:3618:3
    #9 0xf84b62 in dissect_frame /src/wireshark/epan/dissectors/packet-frame.c:938:5
    #10 0x6ef0d4 in call_dissector_through_handle /src/wireshark/epan/packet.c:730:9
    #11 0x6ef0d4 in call_dissector_work /src/wireshark/epan/packet.c:823:9
    #12 0x6ebd7a in call_dissector_only /src/wireshark/epan/packet.c:3243:8
    #13 0x6ebd7a in call_dissector_with_data /src/wireshark/epan/packet.c:3256:8
    #14 0x6eb82f in dissect_record /src/wireshark/epan/packet.c:604:3
    #15 0x6df9f4 in epan_dissect_run /src/wireshark/epan/epan.c:610:2
    #16 0x59715c in LLVMFuzzerTestOneInput /src/wireshark/fuzz/fuzzshark.c:378:2
    #17 0x44bb10 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #18 0x436d85 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #19 0x43c81f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #20 0x467ac2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #21 0x7fa770bda082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #22 0x42ef6d in _start (/out/fuzzshark_media_type-json+0x42ef6d)

DEDUP_TOKEN: json_string_unescape--after_value--execute_callbacks
[1m[32m0x5020000dfbb1 is located 0 bytes after 1-byte region [0x5020000dfbb0,0x5020000dfbb1)
[1m[0m[1m[35mallocated by thread T0 here:[1m[0m
    #0 0x5578df in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x2745538 in g_malloc (/out/fuzzshark_media_type-json+0x2745538)
    #2 0x12c1534 in json_string_unescape /src/wireshark/epan/dissectors/packet-json.c:239:21
    #3 0x12bf48d in after_value /src/wireshark/epan/dissectors/packet-json.c:777:20
    #4 0x266fbd3 in execute_callbacks /src/wireshark/epan/tvbparse.c:1286:39
    #5 0x266f820 in tvbparse_get /src/wireshark/epan/tvbparse.c:1347:9
    #6 0x12bed1e in dissect_json /src/wireshark/epan/dissectors/packet-json.c:541:9
    #7 0x6ef0d4 in call_dissector_through_handle /src/wireshark/epan/packet.c:730:9
    #8 0x6ef0d4 in call_dissector_work /src/wireshark/epan/packet.c:823:9
    #9 0x6f7f20 in call_dissector_only /src/wireshark/epan/packet.c:3243:8
    #10 0x6f7f20 in call_all_postdissectors /src/wireshark/epan/packet.c:3618:3
    #11 0xf84b62 in dissect_frame /src/wireshark/epan/dissectors/packet-frame.c:938:5
    #12 0x6ef0d4 in call_dissector_through_handle /src/wireshark/epan/packet.c:730:9
    #13 0x6ef0d4 in call_dissector_work /src/wireshark/epan/packet.c:823:9
    #14 0x6ebd7a in call_dissector_only /src/wireshark/epan/packet.c:3243:8
    #15 0x6ebd7a in call_dissector_with_data /src/wireshark/epan/packet.c:3256:8
    #16 0x6eb82f in dissect_record /src/wireshark/epan/packet.c:604:3
    #17 0x6df9f4 in epan_dissect_run /src/wireshark/epan/epan.c:610:2
    #18 0x59715c in LLVMFuzzerTestOneInput /src/wireshark/fuzz/fuzzshark.c:378:2
    #19 0x44bb10 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #20 0x436d85 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #21 0x43c81f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #22 0x467ac2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #23 0x7fa770bda082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)

DEDUP_TOKEN: __interceptor_malloc--g_malloc--json_string_unescape
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/wireshark/epan/dissectors/packet-json.c:363:9 in json_string_unescape
Shadow bytes around the buggy address:
  0x5020000df900: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m05[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m05[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m05[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x5020000df980: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x5020000dfa00: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m
  0x5020000dfa80: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m03[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m03[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x5020000dfb00: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m06[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m07[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
=>0x5020000dfb80: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m04[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m[[1m[0m01[1m[0m][1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x5020000dfc00: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x5020000dfc80: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x5020000dfd00: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x5020000dfd80: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x5020000dfe00: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           [1m[0m00[1m[0m
  Partially addressable: [1m[0m01[1m[0m [1m[0m02[1m[0m [1m[0m03[1m[0m [1m[0m04[1m[0m [1m[0m05[1m[0m [1m[0m06[1m[0m [1m[0m07[1m[0m 
  Heap left redzone:       [1m[31mfa[1m[0m
  Freed heap region:       [1m[35mfd[1m[0m
  Stack left redzone:      [1m[31mf1[1m[0m
  Stack mid redzone:       [1m[31mf2[1m[0m
  Stack right redzone:     [1m[31mf3[1m[0m
  Stack after return:      [1m[35mf5[1m[0m
  Stack use after scope:   [1m[35mf8[1m[0m
  Global redzone:          [1m[31mf9[1m[0m
  Global init order:       [1m[36mf6[1m[0m
  Poisoned by user:        [1m[34mf7[1m[0m
  Container overflow:      [1m[34mfc[1m[0m
  Array cookie:            [1m[31mac[1m[0m
  Intra object redzone:    [1m[33mbb[1m[0m
  ASan internal:           [1m[33mfe[1m[0m
  Left alloca redzone:     [1m[34mca[1m[0m
  Right alloca redzone:    [1m[34mcb[1m[0m
==18==ABORTING
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0x5b,0x37,0x5d,
[7]
