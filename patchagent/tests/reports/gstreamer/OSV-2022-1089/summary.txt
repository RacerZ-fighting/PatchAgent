The sanitizer detected a dynamic stack buffer overflow vulnerability. The explanation of the vulnerability is: A dynamically allocated stack buffer is overflowed, leading to potential memory corruption or execution hijacking. Here is the detail: 

[1m[0m[1m[34mWRITE of size 16 at 0x7fb65613e6f0 thread T2 (source:src)[1m[0m
    - __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
    - thread_memory_swap_magazines /src/gstreamer/subprojects/glib/glib/gslice.c:862:19
    - g_slice_alloc /src/gstreamer/subprojects/glib/glib/gslice.c:1059:11
    - gst_decode_chain_new /src/gstreamer/subprojects/gst-plugins-base/gst/playback/gstdecodebin2.c:3542:27
    - type_found /src/gstreamer/subprojects/gst-plugins-base/gst/playback/gstdecodebin2.c:2908:32
    - ffi_call_unix64 /src/gstreamer/subprojects/libffi/src/x86/unix64.S:101:0
    - ffi_call_int /src/gstreamer/subprojects/libffi/src/x86/ffi64.c:667:3
    - g_cclosure_marshal_generic /src/gstreamer/subprojects/glib/gobject/gclosure.c:1534:3
    - g_closure_invoke /src/gstreamer/subprojects/glib/gobject/gclosure.c:830:7
    - signal_emit_unlocked_R /src/gstreamer/subprojects/glib/gobject/gsignal.c:3742:8
    - g_signal_emit_valist /src/gstreamer/subprojects/glib/gobject/gsignal.c:3497:5
    - g_signal_emit /src/gstreamer/subprojects/glib/gobject/gsignal.c:3553:3
    - gst_type_find_element_emit_have_type /src/gstreamer/subprojects/gstreamer/plugins/elements/gsttypefindelement.c:239:3
    - gst_type_find_element_chain_do_typefinding /src/gstreamer/subprojects/gstreamer/plugins/elements/gsttypefindelement.c:999:3
    - gst_type_find_element_sink_event /src/gstreamer/subprojects/gstreamer/plugins/elements/gsttypefindelement.c:700:11
    - gst_pad_send_event_unchecked /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:5897:14
    - gst_pad_push_event_unchecked /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:5541:9
    - push_sticky /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:4044:17
    - events_foreach /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:605:11
    - check_sticky /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:4103:5
    - gst_pad_push_event /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:5672:12
    - event_forward_func /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:3122:19
    - gst_pad_forward /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:3076:25
    - gst_pad_event_default /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:3173:5
    - gst_pad_send_event_unchecked /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:5897:14
    - gst_pad_push_event_unchecked /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:5541:9
    - push_sticky /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:4044:17
    - events_foreach /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:605:11
    - check_sticky /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:4103:5
    - gst_pad_push_event /src/gstreamer/subprojects/gstreamer/gst/gstpad.c:5672:12
    - gst_base_src_loop /src/gstreamer/subprojects/gstreamer/libs/gst/base/gstbasesrc.c:3115:7
    - gst_task_func /src/gstreamer/subprojects/gstreamer/gst/gsttask.c:384:5
    - g_thread_pool_thread_proxy /src/gstreamer/subprojects/glib/glib/gthreadpool.c:354:15
    - g_thread_proxy /src/gstreamer/subprojects/glib/glib/gthread.c:827:20
    - asan_thread_start(void*) /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:239:28

[1m[32mAddress 0x7fb65613e6f0 is located in stack of thread T2 (source:src)[1m[0m

To fix this issue, follow the advice below:

1. If overflow is unavoidable, allocate a sufficiently large buffer during initialization.
2. Add explicit bounds checking before accessing arrays or buffers to prevent overflows.
3. Replace unsafe functions like memcpy, strcpy, strcat, and sprintf with safer alternatives such as strncpy, strncat, and snprintf.
4. Check for integer overflows in size calculations that could cause improper memory allocations.
