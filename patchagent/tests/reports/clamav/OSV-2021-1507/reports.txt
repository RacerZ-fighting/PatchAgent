INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -i -e HELPER=True -e ARCHITECTURE=x86_64 -v /mnt/data0/zf1025/AICC/oss-fuzz/build/out/clamav:/out -v /mnt/data0/zf1025/AICC/oss-patch-build/clamav/OSV-2021-1507/poc.bin:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce clamav_scanfile_XMLDOCS_fuzzer -runs=100.
+ FUZZER=clamav_scanfile_XMLDOCS_fuzzer
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer clamav_scanfile_XMLDOCS_fuzzer -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/clamav_scanfile_XMLDOCS_fuzzer -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase -dict=clamav_scanfile_XMLDOCS_fuzzer.dict < /dev/null
Dictionary: 60 entries
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1859336825
INFO: Loaded 1 modules   (60808 inline 8-bit counters): 60808 [0x55944abe3210, 0x55944abf1f98), 
INFO: Loaded 1 PC tables (60808 PCs): 60808 [0x55944abf1f98,0x55944acdf818), 
/out/clamav_scanfile_XMLDOCS_fuzzer: Running 1 inputs 100 time(s) each.
Running: /testcase
=================================================================
[1m[31m==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x525000002101 at pc 0x559449ee25a7 bp 0x7ffe2ee30440 sp 0x7ffe2ee2fc10
[1m[0m[1m[34mREAD of size 2 at 0x525000002101 thread T0[1m[0m
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x559449ee25a6 in memchr /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:884:3
    #1 0x559449fe8eae in handle_gets /src/clamav/libclamav/fmap.c:810:23
    #2 0x55944a1630af in fmap_gets /src/clamav/libclamav/fmap.h:356:12
    #3 0x55944a1630af in uudecodeFile /src/clamav/libclamav/uuencode.c:104:12
    #4 0x55944a162c35 in cli_uuencode /src/clamav/libclamav/uuencode.c:70:9
    #5 0x55944a007073 in cli_scanuuencoded /src/clamav/libclamav/scanners.c:2955:11
    #6 0x559449ff8080 in cli_magic_scan /src/clamav/libclamav/scanners.c:4543:23
    #7 0x55944a00a18a in magic_scan_nested_fmap_type /src/clamav/libclamav/scanners.c:5057:14
    #8 0x55944a00a18a in cli_magic_scan_nested_fmap_type /src/clamav/libclamav/scanners.c:5147:15
    #9 0x55944a1d3285 in cli_parsegif /src/clamav/libclamav/gif.c:419:41
    #10 0x559449ff903c in cli_magic_scan /src/clamav/libclamav/scanners.c:4617:23
    #11 0x55944a00a18a in magic_scan_nested_fmap_type /src/clamav/libclamav/scanners.c:5057:14
    #12 0x55944a00a18a in cli_magic_scan_nested_fmap_type /src/clamav/libclamav/scanners.c:5147:15
    #13 0x55944a1d3285 in cli_parsegif /src/clamav/libclamav/gif.c:419:41
    #14 0x559449ff903c in cli_magic_scan /src/clamav/libclamav/scanners.c:4617:23
    #15 0x55944a00b5a8 in scan_common /src/clamav/libclamav/scanners.c:5327:14
    #16 0x55944a009ac8 in cl_scandesc_callback /src/clamav/libclamav/scanners.c:5503:14
    #17 0x55944a00c650 in cl_scanfile_callback /src/clamav/libclamav/scanners.c:5598:11
    #18 0x55944a00c650 in cl_scanfile /src/clamav/libclamav/scanners.c:5575:12
    #19 0x559449f9e3a0 in LLVMFuzzerTestOneInput /src/clamav/fuzz/clamav_scanfile_fuzzer.cpp:129:5
    #20 0x559449e52cf0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #21 0x559449e3df65 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #22 0x559449e439ff in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #23 0x559449e6eca2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #24 0x7f45aa523082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #25 0x559449e3614d in _start (/out/clamav_scanfile_XMLDOCS_fuzzer+0x32814d)

DEDUP_TOKEN: ___interceptor_memchr--handle_gets--fmap_gets
[1m[32m0x525000002101 is located 1 bytes after 8192-byte region [0x525000000100,0x525000002100)
[1m[0m[1m[35mallocated by thread T0 here:[1m[0m
    #0 0x559449f5eabf in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3
    #1 0x559449f9f241 in cli_malloc /src/clamav/libclamav/others_common.c:197:13
    #2 0x559449fe781c in cl_fmap_open_handle /src/clamav/libclamav/fmap.c:409:29
    #3 0x559449fe7470 in fmap_check_empty /src/clamav/libclamav/fmap.c:132:9
    #4 0x559449fe9cf8 in fmap /src/clamav/libclamav/fmap.c:947:12
    #5 0x55944a009a98 in cl_scandesc_callback /src/clamav/libclamav/scanners.c:5497:24
    #6 0x55944a00c650 in cl_scanfile_callback /src/clamav/libclamav/scanners.c:5598:11
    #7 0x55944a00c650 in cl_scanfile /src/clamav/libclamav/scanners.c:5575:12
    #8 0x559449f9e3a0 in LLVMFuzzerTestOneInput /src/clamav/fuzz/clamav_scanfile_fuzzer.cpp:129:5
    #9 0x559449e52cf0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #10 0x559449e3df65 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #11 0x559449e439ff in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #12 0x559449e6eca2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x7f45aa523082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)

DEDUP_TOKEN: __interceptor_malloc--cli_malloc--cl_fmap_open_handle
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/clamav/libclamav/fmap.c:810:23 in handle_gets
Shadow bytes around the buggy address:
  0x525000001e80: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x525000001f00: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x525000001f80: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x525000002000: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x525000002080: [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
=>0x525000002100:[[1m[31mfa[1m[0m][1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x525000002180: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x525000002200: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x525000002280: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x525000002300: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x525000002380: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           [1m[0m00[1m[0m
  Partially addressable: [1m[0m01[1m[0m [1m[0m02[1m[0m [1m[0m03[1m[0m [1m[0m04[1m[0m [1m[0m05[1m[0m [1m[0m06[1m[0m [1m[0m07[1m[0m 
  Heap left redzone:       [1m[31mfa[1m[0m
  Freed heap region:       [1m[35mfd[1m[0m
  Stack left redzone:      [1m[31mf1[1m[0m
  Stack mid redzone:       [1m[31mf2[1m[0m
  Stack right redzone:     [1m[31mf3[1m[0m
  Stack after return:      [1m[35mf5[1m[0m
  Stack use after scope:   [1m[35mf8[1m[0m
  Global redzone:          [1m[31mf9[1m[0m
  Global init order:       [1m[36mf6[1m[0m
  Poisoned by user:        [1m[34mf7[1m[0m
  Container overflow:      [1m[34mfc[1m[0m
  Array cookie:            [1m[31mac[1m[0m
  Intra object redzone:    [1m[33mbb[1m[0m
  ASan internal:           [1m[33mfe[1m[0m
  Left alloca redzone:     [1m[34mca[1m[0m
  Right alloca redzone:    [1m[34mcb[1m[0m
==14==ABORTING
