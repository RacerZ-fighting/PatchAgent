The sanitizer detected a heap double free vulnerability. The explanation of the vulnerability is: A heap-allocated memory block is freed twice, potentially causing memory corruption or security vulnerabilities. Here is the detail: 

    - vim_free /root/src/alloc.c:616:2
    - dialog_changed /root/src/ex_cmds2.c:202:6
    - do_buffer_ext /root/src/buffer.c:1452:7
    - do_buffer /root/src/buffer.c:1690:12
    - do_bufdel /root/src/buffer.c:1724:8
    - ex_bunload /root/src/ex_docmd.c:5714:19
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - do_source /root/src/scriptfile.c:1952:12
    - cmd_source /root/src/scriptfile.c:1298:14
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_cmdline_cmd /root/src/ex_docmd.c:622:12
    - exe_commands /root/src/main.c:3173:2
    - vim_main2 /root/src/main.c:790:2
    - main /root/src/main.c:441:12

0x502000019670 is located 0 bytes inside of 9-byte region [0x502000019670,0x502000019679)
freed by thread T0 here:
    - vim_free /root/src/alloc.c:616:2
    - dialog_changed /root/src/ex_cmds2.c:200:6
    - do_buffer_ext /root/src/buffer.c:1452:7
    - do_buffer /root/src/buffer.c:1690:12
    - do_bufdel /root/src/buffer.c:1724:8
    - ex_bunload /root/src/ex_docmd.c:5714:19
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5

previously allocated by thread T0 here:
    - lalloc /root/src/alloc.c:246:11
    - alloc /root/src/alloc.c:151:12
    - vim_strsave /root/src/strings.c:27:9
    - buf_set_name /root/src/buffer.c:3617:21
    - dialog_changed /root/src/ex_cmds2.c:188:6
    - do_buffer_ext /root/src/buffer.c:1452:7
    - do_buffer /root/src/buffer.c:1690:12
    - do_bufdel /root/src/buffer.c:1724:8
    - ex_bunload /root/src/ex_docmd.c:5714:19
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2
    - do_one_cmd /root/src/ex_docmd.c:2616:2
    - do_cmdline /root/src/ex_docmd.c:1028:17
    - do_source_ext /root/src/scriptfile.c:1806:5
    - cmd_source /root/src/scriptfile.c:1281:6
    - ex_source /root/src/scriptfile.c:1324:2


To fix this issue, follow the advice below:

1. Set pointers to NULL immediately after freeing them to prevent accidental reuse.
2. Ensure that each allocated memory block is freed only once.
3. Track memory allocations and deallocations systematically to prevent use-after-free conditions.
4. Consider swap the order of freeing memory and accessing it.